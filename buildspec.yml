version: 0.2
env:
  variables:
    CUDA_HOME: "/usr/local/cuda"
phases:
  install:
    runtime-versions:
      python: 3.10
    commands:
      - echo "🔧 Updating system packages and installing CMake..."
      - apt-get update && apt-get install -y cmake
      - echo "✅ System packages updated and CMake installed"

  pre_build:
    commands:
      - echo "🔍 Capturing triggering commit SHA..."
      - TRIGGER_COMMIT_SHA=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION)

  build:
    commands:
      - echo "🐍 Installing Python dependencies..."
      - pip install --upgrade pip
      - echo "✅ Pip upgraded successfully"

      - echo "🔥 Installing PyTorch with CUDA support..."
      - pip uninstall -y torch
      - pip cache purge
      - pip install torch --index-url https://download.pytorch.org/whl/cu118
      - echo "✅ PyTorch installed successfully"

      - echo "🦙 Installing llama-cpp-python with CUDA support..."
      - pip uninstall -y llama-cpp-python
      - pip cache remove llama_cpp_python
      - CMAKE_ARGS="-DLLAMA_CUBLAS=on" FORCE_CMAKE=1 pip install llama-cpp-python==0.2.75 --no-cache-dir
      - echo "✅ llama-cpp-python installed successfully"

      - echo "🤗 Installing huggingface_hub, transformers, bitsandbytes, peft, trl and accelerate..."
      - pip install huggingface_hub transformers
      - pip install bitsandbytes --prefer-binary
      - pip install accelerate peft trl
      - echo "✅ huggingface_hub, transformers, bitsandbytes, and accelerate installed successfully"

      - echo "🔧 Installing InstructLab..."
      - pip install instructlab --no-cache-dir
      - echo "✅ InstructLab installed successfully"

      - echo "📂 Cloning repositories at specific commit..."
      - git clone https://${GITHUB_USERNAME}:${GITHUB_TOKEN}@github.com/nicklamb97/generated.git
      - cd generated
      - git checkout $TRIGGER_COMMIT_SHA
      - cd ..
      - git clone https://${GITHUB_USERNAME}:${GITHUB_TOKEN}@github.com/nicklamb97/instructlab-config.git
      - echo "✅ Repositories cloned successfully"

      - echo "📄 Copying config file..."
      - cp instructlab-config/config.yaml .
      - echo "✅ Config file copied successfully"

      - echo "📥 Downloading pre-trained model..."
      - ilab model download --repository=NickLamb/OpenROAD-8B-Instruct --filename=OpenROAD-8B-Instruct.Q4_K_M.gguf
      - echo "✅ Pre-trained model downloaded successfully"

      - echo "🏋️ Training model..."
      - ilab model train --device=cuda --num-epochs 24
      - echo "✅ Model training completed"

      - echo "📁 Printing contents of models directory after training..."
      - ls -la models/
      - echo "✅ Models directory contents printed"

      - echo "🏷️ Renaming models..."
      - |
        python -c '
        import os
        from datetime import datetime
        import shutil
        current_time = datetime.now().strftime("%Y%m%d_%H%M%S")
        models_dir = "models"
        models_old_dir = "models_old"
        os.makedirs(models_old_dir, exist_ok=True)
        old_model_path = os.path.join(models_dir, "OpenROAD-8B-Instruct.Q4_K_M.gguf")
        if os.path.exists(old_model_path):
            old_model_name = f"openroad-model-{current_time}.gguf"
            shutil.move(old_model_path, os.path.join(models_old_dir, old_model_name))
            print(f"📦 Moved old OpenROAD-8B-Instruct.Q4_K_M.gguf to {models_old_dir}/{old_model_name}")
        else:
            print("No existing OpenROAD-8B-Instruct.Q4_K_M.gguf found")
        new_model_files = [f for f in os.listdir(models_dir) if f.startswith("ggml-model")]
        if new_model_files:
            new_model_path = os.path.join(models_dir, new_model_files[0])
            os.rename(new_model_path, os.path.join(models_dir, "OpenROAD-8B-Instruct.gguf"))
            print(f"✅ Renamed {new_model_files[0]} to OpenROAD-8B-Instruct.gguf")
        else:
            print("No ggml-model file found")
        print("\n📁 Contents of current models directory:")
        print("\n".join(os.listdir(models_dir)))
        print("\n📁 Contents of models_old directory:")
        print("\n".join(os.listdir(models_old_dir)))
        '
      - echo "✅ Model renaming completed"

      - echo "🔢 Quantizing the trained model..."
      - pip install ctransformers
      - git clone https://github.com/ggerganov/llama.cpp
      - cd llama.cpp
      - make
      - ./llama-quantize ../models/OpenROAD-8B-Instruct.gguf ../models/OpenROAD-8B-Instruct.Q4_K_M.gguf q4_k_m
      - cd ..
      - echo "✅ Model quantization completed"

      - echo "🗑️ Deleting unquantized model..."
      - |
        python -c '
        import os
        models_dir = "models"
        unquantized_model = "OpenROAD-8B-Instruct.gguf"
        if os.path.exists(os.path.join(models_dir, unquantized_model)):
            os.remove(os.path.join(models_dir, unquantized_model))
            print(f"🗑️ Deleted {unquantized_model} from {models_dir}")
        else:
            print(f"❌ {unquantized_model} not found in {models_dir}")
        print("\n📁 Updated contents of models directory:")
        print("\n".join(os.listdir(models_dir)))
        '
      - echo "✅ Unquantized model deleted"

      - echo "🚀 Uploading to Hugging Face..."
      - python upload_to_huggingface.py
      - |
        if [ $? -ne 0 ]; then
          echo "❌ Upload to Hugging Face failed. Skipping subsequent steps."
          exit 1
        fi
      - echo "🎉 Hugging Face upload completed successfully"

      - echo "🔍 Moving recently added files to 'added' directory..."
      - |
        cd generated
        git diff-tree --no-commit-id --name-only -r $TRIGGER_COMMIT_SHA | while read -r file; do
          if [[ $file == discarded_* || $file == generated_* || $file == test_* || $file == train_* ]]; then
            if [ -f "$file" ]; then
              mv "$file" added/
              echo "Moved $file to added/"
            fi
          fi
        done
      - echo "✅ Recently added files moved successfully"

      - echo "🔄 Committing changes to generated repository..."
      - |
        cd generated
        git config user.name "Nick Lamb"
        git config user.email "nick.lamb@diegesis.co.uk"
        git add added/
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Move recently added files to 'added' directory [skip ci]"
          git push https://${GITHUB_USERNAME}:${GITHUB_TOKEN}@github.com/nicklamb97/generated.git HEAD:main
        fi
      - cd ..
      - echo "✅ Changes committed and pushed to generated repository (if any)"

      - echo "🎉 Build process completed successfully"