{"system": "You are an AI language model developed by IBM Research. You are a cautious assistant. You carefully follow instructions. You are helpful and harmless and you follow ethical guidelines and promote positive behavior.", "user": "How would you convert the following Actian 4GL code to c#? Respond only in code: PROCEDURE GetObject (\n/* Input */ ObjectNo = INTEGER    NOT NULL; Status     = VARCHAR(1) NOT NULL;\n/* Output */ Result     = tpo_object;\n) = DECLARE\nreturn_no     = INTEGER      NOT NULL; return_msg = VARCHAR(100) NOT NULL;\nBOObject   = bo_object;\nENDDECLARE BEGIN\n\n/*--------------------------------------------------------------------------------------------*/ /* Validation                                                                                 */ /*--------------------------------------------------------------------------------------------*/\n/* Validate the ObjectNo exists. */\nreturn_msg = '';\nIF ObjectNo = 0 THEN CurUserSession.ValidateFatal( msg = 'Object Number must be set.'); ENDIF;\nIF ObjectDAO.ValidateObjectNo (object_no = ObjectNo, msg         = BYREF(return_msg)) != ER_OK THEN CurUserSession.ValidateFatal( msg = return_msg ); ENDIF;\n/* Retrieve the object */\nreturn_no = ObjectDAO.GetObject (object_no = ObjectNo, status      = Status, object    = BYREF(BOObject));\n/* Set the return TPO and report if empty list */\nResult = Mapper.ToObjectTPO( bo = BOObject );\nEND;", "assistant": "// API Endpoint - GetObject\n[HttpGet(\"GetObject/{objectNo:int}/{status}\")]\npublic async Task<ActionResult<NotificationTPO<ObjectTPO>>> GetObject(int objectNo, string status)\n{\n    StringBuilder logMessage = new StringBuilder();\n    logMessage.AppendLine(StringFunctions\n    .LogStringBuilder($\"GetObject Started objectNo={objectNo}, status={status}\"));\n\n    await _objectDAO.ValidateObjectNo(objectNo);\n    var serviceResponse = new NotificationTPO<ObjectTPO>();\n    bool success = true;\n    try\n    {\n        await _dbConnection.OpenConnectionWithTransaction();\n        ObjectBO object = await _objectData.GetObject(_dbConnection, objectNo, status);\n        serviceResponse.Result = _objectMapper.ToObjectTPO(object);\n    }\n    catch (Exception e)\n    {\n        success = false;\n        //do not wait for response and continue\n        _ = _dbConnection.Rollback();\n        logMessage.AppendLine(StringFunctions\n        .LogStringBuilder($\"GetObject Started objectNo={objectNo}, status={status}\"));\n        throw new Exception(e.Message, e);\n    }\n    finally\n    {\n        if (success) { await _dbConnection.CommitAndClose(); }\n        logMessage.AppendLine(StringFunctions.LogStringBuilder(\"GetObject finished\"));\n        _logger.LogInformation(logMessage.ToString());\n    }\n    return Ok(serviceResponse);\n}\n"}
{"system": "You are an AI language model developed by IBM Research. You are a cautious assistant. You carefully follow instructions. You are helpful and harmless and you follow ethical guidelines and promote positive behavior.", "user": "How would you convert the following Actian 4GL code to c#? Respond only in code: METHOD GetObject ( object_no = INTEGER    NOT NULL; status  \t  = VARCHAR(1) NOT NULL;\nobject    = bo_object; )= DECLARE\nrowcount = INTEGER      NOT NULL; l_where\t = VARCHAR(100) NOT NULL;\nENDDECLARE BEGIN\nl_where = ' object_no = ' + VARCHAR(object_no);\nIF status <> '' THEN l_where = l_where + ' AND object_status = ' + HC_QUOTE + status + HC_QUOTE; ENDIF;\nSELECT object_no\t\tAS object.object_no, object_name\t\tAS object.object_name, object_status\t\tAS object.object_status, object_editcounter\tAS object.object_editcounter FROM object WHERE :l_where;\nIF sql_check(rowcount = BYREF(rowcount)) <> ER_OK THEN RETURN ER_FAIL; ENDIF;\nCOMMIT;\nEND;", "assistant": "// Get object SQL calls\npublic async Task<ObjectBO> GetObject(ConnectionHelper connection, int objectNo, string status)\n{\n    if (!connection.IsConnectionOpen())\n        throw new Exception(\"GetObject tried to use a closed connection \");\n\n    string fromQuery = \"object f\";\n    string whereQuery = $\"f.object_no={objectNo} \";\n\n    if (!string.IsNullOrEmpty(status))\n    {\n        whereQuery = $\" {whereQuery} AND f.object_status='{status}'\";\n    }\n\n    string squery = $\"select f.object_no, f.object_name, f.object_status, f.object_editcounter\"\n    + $\"from {fromQuery} where {whereQuery}\";\n\n    ObjectBO objects = new ObjectBO();\n    try\n    {\n        DbCommand dbCommand = connection.GetCommand();\n        dbCommand.CommandText = squery;\n        var reader = await dbCommand.ExecuteReaderAsync();\n        while (reader.Read())\n        {\n            if (!reader.IsDBNull(0))\n            {\n                objects = new ObjectBO()\n                {\n                    object_no = reader.IsDBNull(0) ? 0 : reader.GetInt32(\"object_no\"),\n                    object_name = reader.IsDBNull(1) ? string.Empty : reader.GetString(\"object_name\"),\n                    object_status = reader.IsDBNull(2) ? string.Empty : reader.GetString(\"object_status\"),\n                    object_editcounter = reader.IsDBNull(3) ? 0 : reader.GetInt32(\"object_editcounter\")\n                };\n            }\n\n        }\n    }\n    catch (Exception e)\n    {\n\n        _logger.LogError(\"Error from class ObjectData - method GetObject\");\n        throw new Exception(e.Message, e);\n    }\n\n    return objects;\n}\n"}
{"system": "You are an AI language model developed by IBM Research. You are a cautious assistant. You carefully follow instructions. You are helpful and harmless and you follow ethical guidelines and promote positive behavior.", "user": "How would you convert the following Actian 4GL code to c#? Respond only in code: SCP_GetFoo:\n/* Input */ FooNo = INTEGER NOT NULL; Status = VARCHAR(1) NOT NULL;\n/* Output */ Result = tpo_foo_detail;\nIF FooNo = 0 THEN CurUserSession.ValidateFatal( msg = 'Foo Number must be set.'); ENDIF;\nIF FooDAO.ValidateFooNo (p_msg      = ByRef(l_return_msg), p_foo_no = FooNo) != ER_OK THEN CurUserSession.ValidateFatal( msg = l_return_msg ); ENDIF;\n/* Fatal error if any validation errors */\nIF CurNotifications.hasValidationNotifications = TRUE THEN CurUserSession.ValidateFatal( msg = 'Validation notifications.'); ENDIF;\n/* Retrieve the foo */ l_return = FooDAO.GetFoo (p_foo_no = FooNo, p_foo    = BYREF(l_bo), p_status   = Status);\nIF l_return <> ER_OK THEN CurUserSession.ValidateFatal(msg = 'Error occurred getting foo [' + VARCHAR(FooNo) + ']'  ); ENDIF;\n/* Set the return TPO and report if empty list */ Result = Mapper.ToFooTPO( bo = l_bo );", "assistant": "// API Endpoint - GetFoo\n[HttpGet(\"GetFoo/{fooNo:int}/{status}\")]\npublic async Task<ActionResult<NotificationTPO<FooTPO>>> GetFoo(int fooNo, string status)\n{\n    StringBuilder logMessage = new StringBuilder();\n    logMessage.AppendLine(StringFunctions.LogStringBuilder($\"GetFoo Started fooNo={fooNo}, status={status}\"));\n\n    await _fooDAO.ValidateFooNo(fooNo);\n    var serviceResponse = new NotificationTPO<FooTPO>();\n    bool success = true;\n    try\n    {\n        await _dbConnection.OpenConnectionWithTransaction();\n        FooBO foo = await _fooData.GetFoo(_dbConnection, fooNo, status);\n        serviceResponse.Result = _fooMapper.ToFooTPO(foo);\n    }\n    catch (Exception e)\n    {\n        success = false;\n        //do not wait for response and continue\n        _ = _dbConnection.Rollback();\n        logMessage.AppendLine(StringFunctions.LogStringBuilder($\"GetFoo Started fooNo={fooNo}, status={status}\"));\n        throw new Exception(e.Message, e);\n    }\n    finally\n    {\n        if (success) { await _dbConnection.CommitAndClose(); }\n        logMessage.AppendLine(StringFunctions.LogStringBuilder(\"GetFoo finished\"));\n        _logger.LogInformation(logMessage.ToString());\n    }\n    return Ok(serviceResponse);\n}\n"}
{"system": "You are an AI language model developed by IBM Research. You are a cautious assistant. You carefully follow instructions. You are helpful and harmless and you follow ethical guidelines and promote positive behavior.", "user": "How would you convert the following Actian 4GL code to c#? Respond only in code: METHOD ValidateFooNo ( p_foo_no       = INTEGER      NOT NULL;\np_footype_code = VarChar(1)   NOT NULL; p_msg            = VarChar(200) NOT NULL; )= Declare\nl_foo_no   = INTEGER NOT NULL; l_rowcount = INTEGER NOT NULL; l_status   = INTEGER NOT NULL;\nEndDeclare Begin\nSELECT foo_no       AS :l_foo_no, footype_code AS :p_footype_code FROM foo WHERE foo_no = :p_foo_no;\nl_status = CALLPROC sql_check(rowcount = BYREF(l_rowcount));\nIF l_status <> ER_OK THEN RETURN ER_FAIL; ENDIF;\nIF (l_rowcount = 0) THEN p_msg = 'Foo number not found in TmsFoo table.'; RETURN ER_FAIL; END\nIF;\nRETURN ER_OK; End", "assistant": "public async Task<bool> ValidateFooNo(int fooNo)\n{\n    var query = $\"SELECT foo_no, footype_code FROM foo WHERE foo_no = {fooNo}\";\n    bool fooExists = false;\n    try\n    {\n        using (var connection = new SqlConnection(_connectionString))\n        {\n            await connection.OpenAsync();\n            using (var command = new SqlCommand(query, connection))\n            {\n                using (var reader = await command.ExecuteReaderAsync())\n                {\n                    fooExists = reader.HasRows;\n                }\n            }\n        }\n        if (!fooExists)\n        {\n            throw new Exception(\"Foo number not found in TmsFoo table.\");\n        }\n    }\n    catch (Exception ex)\n    {\n        _logger.LogError($\"Error validating foo number {fooNo}: {ex.Message}\");\n        throw;\n    }\n\n    return fooExists;\n}\n"}
{"system": "You are an AI language model developed by IBM Research. You are a cautious assistant. You carefully follow instructions. You are helpful and harmless and you follow ethical guidelines and promote positive behavior.", "user": "How would you convert the following Actian 4GL code into c#? Respond only in code: METHOD GetFoo ( p_foo_no       = INTEGER    NOT NULL; p_status         = VARCHAR(1) NOT NULL;\np_foo          = bo_foo; )= DECLARE\nl_status\t           = INTEGER NOT NULL; l_rowcount           = INTEGER NOT NULL; l_where\t           = VARCHAR(100) NOT NULL;\nl_bo_arr_bar_object = ARRAY OF bo_barobject DEFAULT NULL; l_bo_barobject      = bo_barobject          DEFAULT NULL;\nENDDECLARE BEGIN\nl_where = ' foo_no = ' + VARCHAR(p_foo_no);\nIF p_status <> '' THEN l_where = l_where + ' AND foo_status = ' + HC_QUOTE + p_status + HC_QUOTE; ENDIF;\nSELECT t.foo_no\t\t\t\tAS p_foo.foo_no, t.foo_name\t\t\t\tAS p_foo.foo_name, t.foo_webname\t\t\t\tAS p_foo.foo_webname, FROM foo t JOIN footype v ON t.footype_code = v.footype_code LEFT JOIN foopt p ON t.foopt_code = p.foopt_code WHERE :l_where;\nl_status = CALLPROC sql_check(rowcount = BYREF(l_rowcount));\nIF l_status <> ER_OK THEN RETURN ER_FAIL; ENDIF; IF l_rowcount = 0 THEN RETURN ER_OK; ENDIF;\nIF BarDAO.GetBarList( p_foo_no  = p_foo.foo_no, p_bar_list = BYREF(p_foo.arr_foo_bar)) != ER_OK THEN\nRETURN ER_FAIL; ENDIF; FOR l_i = 1 TO p_foo.arr_foo_bar.LastRow DO l_bo_arr_bar_object = p_foo.arr_foo_bar[l_i].arr_bar_object; l_bo_barobject = bo_barobject.Create(); l_bo_barobject.bar_no = p_foo.arr_foo_bar[l_i].bar_no; SELECT f.object_no   AS :l_bo_barobject.object_no, FROM object     f JOIN barobject rf ON rf.object_no = f.object_no WHERE rf.bar_no = :l_bo_barobject.bar_no BEGIN l_bo_arr_bar_object.InsertRow(rowobject = l_bo_barobject.Duplicate()); END;\nIF sql_check(rowcount = BYREF(l_rowcount)) <> ER_OK THEN RETURN ER_FAIL; ENDIF;\nl_bo_arr_bar_object = NULL; l_bo_barobject      = NULL;\nENDFOR; END;", "assistant": "public async Task<FooBO> GetFoo (ConnectionHelper connection, int fooNo, string status)\n{\n    if(!connection.IsConnectionOpen())\n        throw new Exception(\"GetFoo tried to use a closed connection\");\n\n    string fromQuery = \"foo t \";\n    string whereQuery = $\" foo_no {fooNo}\"\n\n    if(status != '')\n    {\n        whereQuery += $\" AND foo_status = '{status}'\"\n    }\n    string joinQuery = \"JOIN footype v ON t.footype_code = v.footype_code LEFT JOIN foopt p ON\" +\n    \"t.foopt_code\"\n\n    string squery = $\"SELECT t.foo_no, t.foo_name, t.foo_webname, t.footype_code\"+\n    $\"from {fromQuery}{joinQuery}{whereQuery};\"\n\n    FooBO foo;\n    try\n    {\n        DbCommand dbCommand = connection.GetCommand();\n        dbCommand.CommandText = squery;\n        var reader = await dbCommand.ExecuteReaderAsync();\n        while (reader.Read())\n        {\n            if(!reader.IsDBNull(0))\n            {\n                foo = new FooBO()\n                {\n                    foo_no = reader.IsDBNull(0) ? 0 : reader.GetInt32(\"foo_no\"),\n                    foo_name = reader.IsDBNull(1) ? string.Empty : reader.GetString(\"foo_name\"),\n                    foo_webname  = reader.IsDBNull(2) ? string.Empty : reader.GetString(\"foo_webname\"),\n                };\n            }\n        }\n    }\n    catch (Exception e)\n    {\n         throw new Exception(e.Message, e);\n    }\n    foo.arr_foo_bar = await GetBarList(connection, fooNo, status);\n\n    foreach(FooBarBO iFooBar in foo.arr_foo_bar)\n    {\n        List<BarObjectBO> arrBarObjectBO = new List<BarObjectBO>;\n        string fromQuery4 = \" object f\";\n        string joinQuery4 = \" JOIN barobject rf ON rf.object_no = f.object_no\";\n        string whereQuery4 = $\" rf.bar_no = {foo.arr_foo_bar.bar_no}\";\n\n        string squery4 = $\"SELECT f.object_no, f.object_name, 2 from{fromQuery4}{joinQuery4}{whereQuery4}\";\n        try\n        {\n            DbCommand dbCommand = connection.GetCommand();\n            dbCommand.CommandText = squery4;\n            var reader = await dbCommand.ExecuteReaderAsync();\n            while(reader.read())\n            {\n                if(reader.IsDBNull(0))\n                {\n                    BarObjectBO barObjectBO = new BarObjectBO()\n                    {\n                        bar_no = foo.arr_foo_bar.bar_no,\n                        object_no = reader.IsDBNull(0) ? 0 : reader.GetInt32(\"object_no\"),\n                    };\n                    arrBarObjectBO.add(barObjectBO);\n                }\n            }\n            iFooBar.arr_bar_object = arrBarObjectBO\n        }\n        catch (Exception e)\n        {\n            throw new Exception(e.Message, e);\n        }\n    }\n    return foo;\n}\n"}
{"system": "You are an AI language model developed by IBM Research. You are a cautious assistant. You carefully follow instructions. You are helpful and harmless and you follow ethical guidelines and promote positive behavior.", "user": "How would you convert the following Actian 4GL code into c#? Respond only in code: Method GetBarList ( p_foo_no  = INTEGER    NOT NULL; p_status    = VARCHAR(1) NOT NULL;\np_bar_list = ARRAY OF bo_foobar; )= DECLARE\nl_rowcount = INTEGER NOT NULL; l_i\t\t = INTEGER NOT NULL; l_where\t = VARCHAR(100) NOT NULL;\nENDDECLARE BEGIN\nl_where = ' 1=1';\nIF p_foo_no != 0 THEN l_where = l_where + ' AND r.foo_no = ' + VARCHAR(p_foo_no); ENDIF;\nIF p_status <> '' THEN l_where = l_where + ' AND r.bar_status = ' + HC_QUOTE + p_status + HC_QUOTE; ENDIF;\nl_i = 1; SELECT v.foo_name\t\t AS p_bar_list[l_i].foo_name, v.foo_no\t\t AS p_bar_list[l_i].foo_no, r.bar_no\t\t\t AS p_bar_list[l_i].bar_no, r.bar_name\t\t AS p_bar_list[l_i].bar_name, r.bar_max\t AS p_bar_list[l_i].bar_max, r.bar_specialnotes\t AS p_bar_list[l_i].bar_specialnotes, r.bar_dayprice\t \t AS p_bar_list[l_i].bar_dayprice, r.bar_daycost\t\t AS p_bar_list[l_i].bar_daycost, r.bar_status\t\t AS p_bar_list[l_i].bar_status, r.qux_code\t\t AS p_bar_list[l_i].qux_code, r.quxorbaz_id\t\t AS p_bar_list[l_i].quxorbaz_id, IFNULL(s.qux_name, '') AS p_bar_list[l_i].qux_name, r.bar_editcounter\t AS p_bar_list[l_i].bar_editcounter, 2                     \t AS p_bar_list[l_i].state FROM foo v JOIN bar  r ON   v.foo_no = r.foo_no LEFT JOIN qux s ON   r.qux_code = s.qux_code WHERE :l_where BEGIN l_i = l_i + 1; END;\nIF sql_check(rowcount = BYREF(l_rowcount)) <> ER_OK THEN RETURN ER_FAIL; ENDIF;\nEND;", "assistant": "public async Task<List<FooBarBO>> GetBarList(ConnectionHelper connection, int fooNo, string status)\n{\n    if(!connection.IsConnectionOpen())\n        throw new Exception(\"GetBarList tried to use a closed connection\");\n\n    string whereQuery3 = \" 1=1\";\n    string fromQuery3 = \" foo v\";\n    string joinQuery3 = \" JOIN bar r ON v.foo_no = r.foo_no LEFT JOIN qux s ON r.qux_code = s.qux_code\";\n\n    if(fooNo !=0)\n    {\n        whereQuery3 += $\" AND r.foo_no = {fooNo}\";\n    }\n\n    if(!string.IsNullOrEmpty(status))\n    {\n        whereQuery3 += $\" AND r.bar_status = '{status}'\";\n    }\n\n    string squery3 = $\"SELECT v.foo_name, v.foo_no, r.bar_no, r.bar_name, r.bar_max, r.bar_specialnotes,\" +\n    \"r.bar_dayprice, r.bar_daycost, r.bar_status, r.qux_code, r.quxorbaz_id, IFNULL(s.qux_name, ''),\" +\n    $\"r.bar_editcounter, 2 FROM {fromQuery3}{joinQuery3} WHERE {whereQuery3};\";\n    List<FooBarBO> fooBars = new List<FooBarBO>();\n\n    try\n    {\n        DbCommand dbCommand = connection.GetCommand();\n        dbCommand.CommandText = squery3;\n        var reader = await dbCommand.ExecuteReaderAsync();\n\n        while(reader.Read())\n        {\n            if(!reader.IsDBNull(0))\n            {\n                FooBarBO fooBar = new FooBarBO()\n                {\n                    foo_name = reader.IsDBNull(0) ? string.Empty : reader.GetString(0),\n                    foo_no = reader.IsDBNull(1) ? 0 : reader.GetInt32(1),\n                    bar_no = reader.IsDBNull(2) ? 0 : reader.GetInt32(2),\n                    bar_name = reader.IsDBNull(3) ? string.Empty : reader.GetString(3),\n                    bar_max = reader.IsDBNull(4) ? string.Empty : reader.GetString(4),\n                    bar_specialnotes = reader.IsDBNull(5) ? string.Empty : reader.GetString(5),\n                    bar_dayprice = reader.IsDBNull(6) ? 0m : reader.GetDecimal(6),\n                    bar_daycost = reader.IsDBNull(7) ? 0m : reader.GetDecimal(7),\n                    bar_status = reader.IsDBNull(8) ? string.Empty : reader.GetString(8),\n                    qux_code = reader.IsDBNull(9) ? string.Empty : reader.GetString(9),\n                    quxorbaz_id = reader.IsDBNull(10) ? 0 : reader.GetInt32(10),\n                    qux_name = reader.IsDBNull(11) ? string.Empty : reader.GetString(11),\n                    bar_editcounter = reader.IsDBNull(12) ? 0 : reader.GetInt32(12),\n                    state = 2\n                };\n                fooBars.Add(fooBar);\n            }\n        }\n\n    }\n    catch (Exception e)\n    {\n        _logger.LogError(\"Error from class FooData - method GetBarList\");\n        throw new Exception(e.Message, e);\n    }\n\n    return fooBars;\n}\n"}
{"system": "You are an AI language model developed by IBM Research. You are a cautious assistant. You carefully follow instructions. You are helpful and harmless and you follow ethical guidelines and promote positive behavior.", "user": "How would you convert the following Actian 4GL code to c#? Respond only in code: METHOD ToFooTPO ( bo = bo_foo; )= DECLARE l_tpo\t\t= tpo_foo_detail; l_tpo_foobody\t= tpo_foobody; l_tpo_foobar\t= tpo_foobar; l_tpo_barobject  = tpo_barobject;\nl_bo_barobject   = bo_barobject DEFAULT NULL;\ni                   = INTEGER NOT NULL; j                   = INTEGER NOT NULL; ENDDECLARE BEGIN l_tpo.FooNo\t\t= bo.foo_no; l_tpo.FooName\t\t= bo.foo_name; l_tpo.WebName\t\t= bo.foo_webname; l_tpo.TypeCode\t\t= bo.footype_code; l_tpo.TypeName\t\t= bo.footype_name;\nl_tpo.quxCode        = bo.qux_code; l_tpo.quxorbazId         = bo.quxorbaz_id; l_tpo.QuxName          = bo.qux_name;\n// Body FOR i = 1 TO bo.arr_foo_body.LastRow DO l_tpo_foobody.FooNo\t\t= bo.arr_foo_body[i].foo_no; l_tpo_foobody.BodyNo\t\t= bo.arr_foo_body[i].body_no; l_tpo_foobody.BodyName\t= bo.arr_foo_body[i].body_name;\nl_tpo.ArrFooBody.InsertRow( RowObject = l_tpo_foobody.Duplicate() ); ENDFOR;\n// Bar FOR i = 1 TO bo.arr_foo_bar.LastRow DO l_tpo_foobar.FooNo\t\t= bo.arr_foo_bar[i].foo_no; l_tpo_foobar.No\t\t= bo.arr_foo_bar[i].bar_no; l_tpo_foobar.Name\t\t= bo.arr_foo_bar[i].bar_name; l_tpo_foobar.quxCode  = bo.arr_foo_bar[i].qux_code; l_tpo_foobar.QuxName    = bo.arr_foo_bar[i].qux_name;\nl_tpo.ArrFooBar.InsertRow( RowObject = l_tpo_foobar.Duplicate() );\n// Objects linked to a bar, e.g. an overhead projector\nFOR j = 1 TO bo.arr_foo_bar[i].arr_bar_object.LastRow DO l_bo_barobject = bo.arr_foo_bar[i].arr_bar_object[j];\nl_tpo_barobject.No           = l_bo_barobject.bar_no; l_tpo_barobject.ObjectNo   = l_bo_barobject.object_no; l_tpo_barobject.ObjectName = l_bo_barobject.object_name;\nl_tpo.ArrFooBar[1].ArrBarObject.InsertRow( RowObject = l_tpo_barobject.Duplicate() ); ENDFOR;\nENDFOR;\nRETURN l_tpo;\nEND", "assistant": "public FooDetailTPO ToFooTPO(FooBO bo)\n{\n    FooDetailTPO tpo = new FooDetailTPO()\n    {\n        FooNo = bo.foo_no,\n        FooName = bo.foo_name,\n        WebName = bo.foo_webname,\n        TypeCode = bo.footype_code,\n        TypeName = bo.footype_name,\n\n        QuxCode = bo.qux_code,\n        quxorbazId = bo.quxorbaz_id,\n        QuxName = bo.qux_name,\n    };\n\n    List<FooBodyTPO> fooBodies = new List<FooBodyTPO>();\n    foreach (var body in bo.arr_foo_body)\n    {\n        FooBodyTPO fooBody = new FooBodyTPO()\n        {\n            FooNo = body.foo_no,\n            BodyNo = body.body_no,\n            BodyName = body.body_name,\n        };\n        fooBodies.Add(fooBody);\n    }\n    tpo.ArrFooBody = fooBodies;\n\n    List<FooBarTPO> fooBars = new List<FooBarTPO>();\n    foreach (var bar in bo.arr_foo_bar)\n    {\n        FooBarTPO fooBar = new FooBarTPO()\n        {\n            FooNo = bar.foo_no,\n            No = bar.bar_no,\n            Name = bar.bar_name,\n            QuxCode = bar.qux_code,\n            QuxName = bar.qux_name,\n        };\n\n        List<BarObjectTPO> barObjects = new List<BarObjectTPO>();\n        foreach (var obj in bar.arr_bar_object)\n        {\n            BarObjectTPO barObject = new BarObjectTPO()\n            {\n                No = obj.bar_no,\n                ObjectNo = obj.object_no,\n                ObjectName = obj.object_name,\n            };\n            barObjects.Add(barObject);\n        }\n        fooBar.ArrBarObject = barObjects;\n        fooBars.Add(fooBar);\n    }\n    tpo.ArrFooBar = cheese;\n    return tpo;\n}\n"}
