[
    {
        "instruction": "How do you remove individual constraints using the drop integrity statement?",
        "input": "",
        "output": "To remove individual constraints, specify their integer equivalents separated by commas after `integer`. You can obtain the integer equivalents for integrity constraints by executing the help integrity statement. For example:\n```\ndrop integrity on table_name 1, 4;\n```",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "Can I list all the parameters in the drop integrity statement?",
        "input": "",
        "output": "Yes, the parameters for the drop integrity statement are:\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "Explain how the drop integrity statement affects query plans and database procedures?",
        "input": "",
        "output": "When integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure. This ensures that the updated table structure reflects in all related operations.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "What is the syntax of the drop integrity statement in Actian 4GL SQL?",
        "input": "",
        "output": "The syntax of the drop integrity statement is as follows:\n```\ndrop integrity on table_name ALL | integer {, integer};\n```",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "What happens after integrity constraints are dropped from a table in Actian 4GL SQL?",
        "input": "",
        "output": "After integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table. The DBMS Server also recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "Explain what happens when integrity constraints are dropped from a table using the drop integrity statement?",
        "input": "",
        "output": "When integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table. This means that any changes made to the data or schema after dropping the constraints will be reflected in the updated table structure. However, it's important to note that the drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "List an example where we use drop integrity on individual constraints.",
        "input": "",
        "output": "To drop individual integrity constraints, specify their integer values after the table name separated by commas in the drop integrity statement. For example:\n```\ndrop integrity on job 1, 4, 5;\n```\nThis command drops the integrity constraints numbered 1, 4 and 5 from the \"job\" table.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "What happens when integrities are dropped from a table?",
        "input": "",
        "output": "When integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table. The DBMS Server also recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "Can you explain how dropping integrity constraints affects a table?",
        "input": "",
        "output": "Dropping integrity constraints from a table using the drop integrity statement does not affect the data stored within the table, but it removes the specified constraints defined for that table. This can impact data integrity since constraints are used to enforce rules on the data, ensuring it is valid and accurate. Additionally, the DBMS Server updates the date and timestamp of the affected table, and recreates query plans for repeat queries and database procedures.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "What does the drop integrity statement not remove?",
        "input": "",
        "output": "The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "What are the parameters for the drop integrity statement?",
        "input": "",
        "output": "The parameters for the drop integrity statement are:\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "How does the DBMS Server handle queries and procedures after dropping integrities from a table?",
        "input": "",
        "output": "After integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "What happens to a table after all integrities are dropped using the drop integrity statement?",
        "input": "",
        "output": "After all the constraints are dropped from a table using the `drop integrity` statement, the DBMS Server updates the date and timestamp of that table.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "What is the effect of running the `drop integrity` statement without specifying any constraints?",
        "input": "",
        "output": "Running the `drop integrity` statement without specifying any constraints will drop all the constraints currently defined for the specified table. The DBMS Server updates the date and timestamp of that table after removing all integrities from it.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "What happens to query plans when integrities are dropped from a table using the drop integrity statement?",
        "input": "",
        "output": "After integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "What does the drop integrity statement do when all constraints are dropped from a table?",
        "input": "",
        "output": "When all integrities are dropped from a table using the `drop integrity on table_name all;` command, it removes all the constraints currently defined for that specified table.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "List some permissions that we need in order to use the drop integrity statement.",
        "input": "",
        "output": "To use the drop integrity statement, you must own the table.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "Can you provide a brief explanation of what happens when integrities are dropped from a table in Actian 4GL SQL?",
        "input": "",
        "output": "When integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table. Additionally, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "What does the DBMS Server do after removing integrity constraints from a table?",
        "input": "",
        "output": "After integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table. Additionally, it recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "What does the syntax for the drop integrity statement look like and what parameters can be used in this statement?",
        "input": "",
        "output": "The syntax for the drop integrity statement is:\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\nThe parameters include: table_name (Specifies the name of the table for which integrity constraints are to be dropped), all (Removes all the constraints currently defined for the specified table) and integer(,integer) (Removes individual constraints). To obtain the integer equivalents for integrity constraints, execute the help integrity statement.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "Explain what is meant by \"ALL\" when using the drop integrity statement in Actian 4GL SQL.",
        "input": "",
        "output": "When using the drop integrity statement with the \"ALL\" parameter, all the constraints currently defined for the specified table are removed.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "What does a GPT model need to know before executing the drop integrity statement?",
        "input": "",
        "output": "Before executing the `drop integrity` statement, it is necessary for a GPT model (or a user) to understand that:\n  1. It must own the table and have the necessary permissions.\n  2. The drop integrity statement does not remove constraints defined using the create table statement.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "Explain what happens when a user drops all constraints from a table using the drop integrity statement?",
        "input": "",
        "output": "When \"all\" is specified in the drop integrity statement, it removes all the constraints currently defined for the specified table. The DBMS Server updates the date and timestamp of that table after integrities are dropped. This operation can impact the performance of queries and database procedures that rely on these constraints. It is advisable to drop only specific constraints when necessary.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "How can you remove all constraints currently defined for a specified table?",
        "input": "",
        "output": "To remove all constraints currently defined for a specified table, use the `drop integrity on table_name all` syntax.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "What parameter is used in the drop integrity statement to remove individual constraints?",
        "input": "",
        "output": "To remove individual constraints, you can use the `integer` parameter in the `drop integrity` statement. You can obtain the integer equivalents for integrity constraints by executing the `help integrity` statement.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "What is the syntax for dropping all constraints from a specific table using the drop integrity statement?",
        "input": "",
        "output": "The syntax for dropping all the constraints from a specific table using the `drop integrity` statement is:\n```\ndrop integrity on table_name ALL;\n```",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "How can you use the drop integrity statement to remove individual constraints?",
        "input": "**\n<noinput>",
        "output": "**\nTo remove individual constraints, include their integer equivalents after the `on` keyword and separate them by commas:\n```\ndrop integrity on table_name integer1, integer2;\n```\nYou can obtain the integer equivalents for integrity constraints using the help integrity statement.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "What happens when integrities are dropped from a table in Actian 4GL SQL?",
        "input": "",
        "output": "When integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table. After integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "What happens to a table when its integrity constraints are dropped?",
        "input": "",
        "output": "When integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table. Additionally, if repeating queries or procedures target the affected table, the DBMS Server recreates the query plans for improved performance.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "Can we remove constraints defined using the create table statement using the drop integrity statement?",
        "input": "",
        "output": "No, the drop integrity statement does not remove constraints defined using the create table statement. The create table statement sets up initial constraints during the table creation process while the drop integrity statement removes those constraints after they have been created.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "What does the ALL keyword do in the drop integrity statement?",
        "input": "",
        "output": "The `all` keyword removes all the constraints currently defined for the specified table. This can be useful when you want to remove all existing constraints and start fresh.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "How can you remove individual integrity constraints from a table?",
        "input": "",
        "output": "To remove individual integrity constraints, you can use the drop integrity statement with integer values representing the indices of the constraints to be removed. For example, `drop integrity on job 1;` will drop only constraint number 1 of the job table.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "What is the difference between using 'all' and specific integers in the drop integrity statement?",
        "input": "",
        "output": "Using 'all' removes all the constraints currently defined for the specified table, whereas using integer values allows you to remove individual constraints. The integer value of each constraint can be obtained by executing the help integrity statement.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "What's the difference between dropping integrity constraints using drop integrity statement and create table statement?",
        "input": "",
        "output": "The drop integrity statement removes integrity constraints that have already been defined for a specific table, while the create table statement defines new integrity constraints at the time of creating a table. The drop integrity statement does not affect the data stored within the table, but it can impact data integrity since constraints enforce rules on the data. On the other hand, the create table statement ensures that the newly created table adheres to certain integrity constraints before any data is inserted into it.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "Can you provide a scenario where we would use the drop integrity statement?",
        "input": "",
        "output": "A possible scenario where the drop integrity statement can be useful is when you need to modify or adjust an existing table's constraints. For example, if you want to relax some of the current constraints for a table because they are causing issues with data insertion or updating, or if you want to delete some constraints that are no longer required, you can use the drop integrity statement.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "How can you drop individual constraints in Actian 4GL SQL?",
        "input": "",
        "output": "To drop individual constraints, specify their integer equivalents after the table name in the `drop integrity` statement. To obtain these integers, execute the help integrity statement. For example:\n```\ndrop integrity on exhibitions 1, 4;\n```",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "What is the syntax for specifying individual constraints using the drop integrity statement in Actian 4GL SQL?",
        "input": "",
        "output": "To specify individual constraints, include their integer equivalents after the `on` keyword and separate them by commas:\n```\ndrop integrity on table_name integer1, integer2;\n```\nYou can obtain the integer equivalents for integrity constraints using the help integrity statement.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "How can we drop a specific constraint in a table using drop integrity statement?",
        "input": "",
        "output": "To drop a specific constraint in a table, you can use the drop integrity on table_name integer syntax, where table_name is the name of the table and the integer value is the number associated with the specific constraint. The number for each constraint can be obtained by executing the help integrity statement.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "How can you drop a specific constraint from a table using the drop integrity statement?",
        "input": "",
        "output": "To drop a specific constraint, specify the constraint's integer value after the table name in the drop integrity statement. To obtain the integer equivalents for integrity constraints, execute the help integrity statement. For example:\n```\ndrop integrity on job 4;\n```",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    },
    {
        "instruction": "What are some scenarios where dropping constraints might be useful in a table?",
        "input": "",
        "output": "Dropping constraints might be useful in various situations, such as:\n- When a table structure needs to change and the old constraints no longer apply.\n- In testing scenarios when you want to temporarily remove some constraints from the tables for faster data insertion or manipulation without enforcing them.\n- To recover space in the database by removing unused indexes or check constraints.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->drop_integrity",
        "task_description": "Explain the features and parameters and syntax of the drop integrity statement in Actian 4GL SQL.",
        "document": [
            "# Drop Integrity Statement\n\nThe drop integrity statement removes the specified integrity constraints from a table.\n\n## Syntax\n\n```\ndrop integrity on table_name ALL | integer {, integer};\n```\n\nWhen integrities are dropped from a table, the DBMS Server updates the date and timestamp of that table.\n\nAfter integrities are dropped from a table, the DBMS Server recreates query plans for repeat queries and database procedures when an attempt is made to execute the repeat query or database procedure.\n\n**Note:** The drop integrity statement does not remove constraints defined using the create table statement (see Create Table Statement).\n\n## Parameters\n\nThis statement has the following parameters:\n\n- **table_name**: Specifies the name of the table for which integrity constraints are to be dropped.\n- **all**: Removes all the constraints currently defined for the specified table.\n- **integer (,integer)**: Removes individual constraints. To obtain the integer equivalents for integrity constraints, execute the help integrity statement.\n\n## Permissions\n\nYou must own the table.\n\n## Related Statements\n\n- Create Integrity Statement\n\n## Examples\n\nThe following are drop integrity statement examples:\n\n1. Drop integrity constraints 1, 4, and 5 on the job table.\n\n    ```\n    drop integrity on job 1, 4, 5;\n    ```\n\n2. In an application, drop all the constraints against the exhibitions table.\n\n    ```\n    drop integrity on exhibitions all;\n    ```"
        ]
    }
]