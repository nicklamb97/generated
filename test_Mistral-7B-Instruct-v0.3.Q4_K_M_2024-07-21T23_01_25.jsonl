{"system": "You are an AI language model developed by IBM Research. You are a cautious assistant. You carefully follow instructions. You are helpful and harmless and you follow ethical guidelines and promote positive behavior.", "user": "Convert this 4GL Select statement to C#. Respond only in code: SELECT employee_id, full_name, salary FROM employees WHERE department = 'Marketing' AND hire_date > '2023-01-01';", "assistant": "using (SqlConnection connection = new SqlConnection(connectionString))\n{\n    connection.Open();\n    using (SqlCommand command = new SqlCommand(\n        \"SELECT employee_id, full_name, salary FROM employees\n        WHERE department = @department AND hire_date > @hireDate\",\n        connection))\n    {\n        command.Parameters.AddWithValue(\"@department\", \"Marketing\");\n        command.Parameters.AddWithValue(\"@hireDate\", new DateTime(2023, 1, 1));\n        using (SqlDataReader reader = command.ExecuteReader())\n        {\n            while (reader.Read())\n            {\n                int employeeId = (int)reader[\"employee_id\"];\n                string fullName = reader[\"full_name\"].ToString();\n                decimal salary = (decimal)reader[\"salary\"];\n                // Process data\n            }\n        }\n    }\n}\n"}
{"system": "You are an AI language model developed by IBM Research. You are a cautious assistant. You carefully follow instructions. You are helpful and harmless and you follow ethical guidelines and promote positive behavior.", "user": "How would you convert this 4GL Insert statement to C#? Respond only in code: INSERT INTO orders (customer_id, order_date, total_amount) VALUES (1001, CURRENT, 299.99);", "assistant": "using (SqlConnection connection = new SqlConnection(connectionString))\n{\n    connection.Open();\n    using (SqlCommand command = new SqlCommand(\n        \"INSERT INTO orders (customer_id, order_date, total_amount)\n        VALUES (@customerId, @orderDate, @totalAmount)\",\n        connection))\n    {\n        command.Parameters.AddWithValue(\"@customerId\", 1001);\n        command.Parameters.AddWithValue(\"@orderDate\", DateTime.Now);\n        command.Parameters.AddWithValue(\"@totalAmount\", 299.99m);\n        command.ExecuteNonQuery();\n    }\n}\n"}
{"system": "You are an AI language model developed by IBM Research. You are a cautious assistant. You carefully follow instructions. You are helpful and harmless and you follow ethical guidelines and promote positive behavior.", "user": "Convert this 4GL Update statement to C#. Respond only in code: UPDATE inventory SET stock_level = stock_level - 5 WHERE product_id = 789 AND warehouse_id = 2;", "assistant": "using (SqlConnection connection = new SqlConnection(connectionString))\n{\n    connection.Open();\n    using (SqlCommand command = new SqlCommand(\n        \"UPDATE inventory SET stock_level = stock_level - @quantity\n        WHERE product_id = @productId AND warehouse_id = @warehouseId\",\n        connection))\n    {\n        command.Parameters.AddWithValue(\"@quantity\", 5);\n        command.Parameters.AddWithValue(\"@productId\", 789);\n        command.Parameters.AddWithValue(\"@warehouseId\", 2);\n        command.ExecuteNonQuery();\n    }\n}\n"}
{"system": "You are an AI language model developed by IBM Research. You are a cautious assistant. You carefully follow instructions. You are helpful and harmless and you follow ethical guidelines and promote positive behavior.", "user": "How would you convert this 4GL Delete statement to C#? Respond only in code: DELETE FROM temp_logs WHERE creation_date < CURRENT - INTERVAL '30' DAY;", "assistant": "using (SqlConnection connection = new SqlConnection(connectionString))\n{\n    connection.Open();\n    using (SqlCommand command = new SqlCommand(\n        \"DELETE FROM temp_logs WHERE creation_date < @cutoffDate\",\n        connection))\n    {\n        command.Parameters.AddWithValue(\"@cutoffDate\", DateTime.Now.AddDays(-30));\n        command.ExecuteNonQuery();\n    }\n}\n"}
{"system": "You are an AI language model developed by IBM Research. You are a cautious assistant. You carefully follow instructions. You are helpful and harmless and you follow ethical guidelines and promote positive behavior.", "user": "Convert this 4GL transaction to C#. Respond only in code: BEGIN WORK; INSERT INTO sales (product_id, quantity, sale_date) VALUES (123, 2, CURRENT); UPDATE inventory SET stock_level = stock_level - 2 WHERE product_id = 123; COMMIT WORK;", "assistant": "using (SqlConnection connection = new SqlConnection(connectionString))\n{\n    connection.Open();\n    using (SqlTransaction transaction = connection.BeginTransaction())\n    {\n        try\n        {\n            using (SqlCommand insertCommand = new SqlCommand(\n                \"INSERT INTO sales (product_id, quantity, sale_date) VALUES (@productId, @quantity, @saleDate)\",\n                connection, transaction))\n            {\n                insertCommand.Parameters.AddWithValue(\"@productId\", 123);\n                insertCommand.Parameters.AddWithValue(\"@quantity\", 2);\n                insertCommand.Parameters.AddWithValue(\"@saleDate\", DateTime.Now);\n                insertCommand.ExecuteNonQuery();\n            }\n\n            using (SqlCommand updateCommand = new SqlCommand(\n                \"UPDATE inventory SET stock_level = stock_level - @quantity WHERE product_id = @productId\",\n                connection, transaction))\n            {\n                updateCommand.Parameters.AddWithValue(\"@quantity\", 2);\n                updateCommand.Parameters.AddWithValue(\"@productId\", 123);\n                updateCommand.ExecuteNonQuery();\n            }\n\n            transaction.Commit();\n        }\n        catch\n        {\n            transaction.Rollback();\n            throw;\n        }\n    }\n}\n"}
{"system": "You are an AI language model developed by IBM Research. You are a cautious assistant. You carefully follow instructions. You are helpful and harmless and you follow ethical guidelines and promote positive behavior.", "user": "How would you convert this 4GL error handling to C#? Respond only in code: WHENEVER ERROR BEGIN LET error_code = SQLCA.SQLCODE; LET error_message = SQLCA.SQLERRM; CALL log_error(error_code, error_message); ROLLBACK WORK; END", "assistant": "try\n{\n    // Database operations\n}\ncatch (SqlException ex)\n{\n    int errorCode = ex.Number;\n    string errorMessage = ex.Message;\n    LogError(errorCode, errorMessage);\n    // If using transactions:\n    // transaction.Rollback();\n    throw;\n}\n"}
{"system": "You are an AI language model developed by IBM Research. You are a cautious assistant. You carefully follow instructions. You are helpful and harmless and you follow ethical guidelines and promote positive behavior.", "user": "Convert this 4GL FOR loop to C#. Respond only in code: FOR cust IN SELECT customer_id, name, email FROM customers WHERE status = 'Active' CALL send_newsletter(cust.email); END FOR;", "assistant": "using (SqlConnection connection = new SqlConnection(connectionString))\n{\n    connection.Open();\n    using (SqlCommand command = new SqlCommand(\n        \"SELECT customer_id, name, email FROM customers WHERE status = @status\",\n        connection))\n    {\n        command.Parameters.AddWithValue(\"@status\", \"Active\");\n        using (SqlDataReader reader = command.ExecuteReader())\n        {\n            while (reader.Read())\n            {\n                int customerId = (int)reader[\"customer_id\"];\n                string name = reader[\"name\"].ToString();\n                string email = reader[\"email\"].ToString();\n                SendNewsletter(email);\n            }\n        }\n    }\n}\n"}
{"system": "You are an AI language model developed by IBM Research. You are a cautious assistant. You carefully follow instructions. You are helpful and harmless and you follow ethical guidelines and promote positive behavior.", "user": "How would you convert this 4GL WHILE loop to C#? Respond only in code: LET retry_count = 0; WHILE retry_count < 3 TRY CALL process_data(); EXIT WHILE; CATCH LET retry_count = retry_count + 1; ENDTRY END WHILE;", "assistant": "int retryCount = 0;\nwhile (retryCount < 3)\n{\n    try\n    {\n        ProcessData();\n        break;\n    }\n    catch\n    {\n        retryCount++;\n    }\n}\n"}
{"system": "You are an AI language model developed by IBM Research. You are a cautious assistant. You carefully follow instructions. You are helpful and harmless and you follow ethical guidelines and promote positive behavior.", "user": "Convert this 4GL conditional statement to C#. Respond only in code: IF order_total > 1000 THEN LET shipping_cost = 0; ELIF order_total > 500 THEN LET shipping_cost = 5.99; ELSE LET shipping_cost = 9.99; END IF;", "assistant": "decimal shippingCost;\nif (orderTotal > 1000)\n{\n    shippingCost = 0m;\n}\nelse if (orderTotal > 500)\n{\n    shippingCost = 5.99m;\n}\nelse\n{\n    shippingCost = 9.99m;\n}\n"}
{"system": "You are an AI language model developed by IBM Research. You are a cautious assistant. You carefully follow instructions. You are helpful and harmless and you follow ethical guidelines and promote positive behavior.", "user": "How would you convert this 4GL string concatenation to C#? Respond only in code: LET order_summary = order_id || ' - ' || customer_name || ' (' || TO_CHAR(order_date, '%Y-%m-%d') || '): $' || order_total;", "assistant": "string orderSummary = $\"{orderId} - {customerName} ({orderDate:yyyy-MM-dd}): ${orderTotal:F2}\";\n"}
{"system": "You are an AI language model developed by IBM Research. You are a cautious assistant. You carefully follow instructions. You are helpful and harmless and you follow ethical guidelines and promote positive behavior.", "user": "Convert this 4GL function call to C#. Respond only in code: FUNCTION calculate_discount(p_order_total DECIMAL(10,2), p_customer_type CHAR(10)) RETURNS DECIMAL(10,2) IF p_customer_type = 'VIP' THEN RETURN p_order_total * 0.15; ELIF p_customer_type = 'Regular' THEN RETURN p_order_total * 0.05; ELSE RETURN 0; END IF; END FUNCTION\nLET discount_amount = calculate_discount(500.00, 'VIP');", "assistant": "public decimal CalculateDiscount(decimal orderTotal, string customerType)\n{\n    switch (customerType)\n    {\n        case \"VIP\":\n            return orderTotal * 0.15m;\n        case \"Regular\":\n            return orderTotal * 0.05m;\n        default:\n            return 0m;\n    }\n}\n\n// Usage\ndecimal discountAmount = CalculateDiscount(500.00m, \"VIP\");\n"}
