[
    {
        "instruction": "Can we eliminate duplication among our scripts and make code more readable using procedures? If yes, how?",
        "input": "",
        "output": "Yes, you can achieve this by creating and utilizing procedures. Procedures allow you to consolidate repetitive code into a single unit (procedure) which makes your scripts less redundant and easier to understand.",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    },
    {
        "instruction": "How does OpenROAD let us create 4GL procedures?",
        "input": "",
        "output": "To create a global 4GL procedure in the OpenROAD Workbench, while local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. The language reference guide provides syntax to write 4GL procedures.",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    },
    {
        "instruction": "Provide an example of a global 4GL procedure and describe how it can be created in OpenROAD Workbench.",
        "input": "",
        "output": "Global 4GL procedures are created in the OpenROAD Workbench. For example, consider a global 4GL procedure that displays a message:\n```\nPROCEDURE MyProcedure ()\n\tDISPLAY 'This is my custom function!';\nEND PROCEDURE;\n```",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    },
    {
        "instruction": "How can you define procedures locally in OpenROAD?",
        "input": "",
        "output": "Procedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendant fields (fields within the scope of the calling script).",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    },
    {
        "instruction": "Can you describe the three types of procedures in OpenROAD?",
        "input": "",
        "output": "OpenROAD lets you create three types of procedures: Global 4GL procedures that are created in the OpenROAD Workbench, Local 4GL procedures declared and defined in the frame, field, or procedure script in which they are called, Database procedures that are created and maintained independently of OpenROAD but must be registered with specific applications, and 3GL procedures that are also created and maintained independently of OpenROAD but must be registered with specific applications.",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    },
    {
        "instruction": "Describe the difference between global and local procedures in Actian 4GL SQL.",
        "input": "",
        "output": "Procedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well. On the other hand, procedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendant fields (fields within the scope of the calling script).",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    },
    {
        "instruction": "What is a procedure and how does it differ from an event-driven code?",
        "input": "",
        "output": "A procedure is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable.",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    },
    {
        "instruction": "How can you define procedures in Actian 4GL SQL?",
        "input": "",
        "output": "You can define procedures in two ways: globally or locally. Globally defined procedures can be called from any OpenROAD script in that application or, if included in another application, from a second application as well. On the other hand, procedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendant fields (fields within the scope of the calling script). OpenROAD lets you create three types of procedures: 4GL procedures, database procedures, and 3GL procedures.",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    },
    {
        "instruction": "Explain the types of procedures in Actian 4GL SQL with examples for each type.",
        "input": "",
        "output": "OpenROAD lets you create three types of procedures:\n\n1. 4GL procedures: Global 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For example:\n```4gl\nPROCEDURE my_procedure;\nBEGIN\n    -- code here\nEND;\n```\n2. Database procedures: Database procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. An example for this type is not provided in the document.\n3. 3GL procedures: 3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. An example for this type is not provided in the document.",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    },
    {
        "instruction": "Explain what a globally defined procedure is and how it can be called from an OpenROAD script.",
        "input": "",
        "output": "A globally defined procedure is created in the OpenROAD Workbench, and it can be called from any OpenROAD script within the application or from a second application if included. In order to call the globally defined procedure, you just need to write the procedure's name followed by its parameters if applicable, enclosed in parentheses.",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    },
    {
        "instruction": "Why are procedures used primarily to eliminate duplication among scripts and make code more readable in OpenROAD?",
        "input": "",
        "output": "Procedures are primarily used in OpenROAD to eliminate redundancy and enhance readability. By grouping tasks that may be needed multiple times into a single unit, procedures help reduce the amount of script code required throughout an application, which leads to easier maintenance and improved organization. Additionally, by giving specific names to these blocks of code, developers can have an easier time understanding what they do just by looking at their names when they read through the scripts later on.",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    },
    {
        "instruction": "What are the differences between globally defined and locally defined procedures?",
        "input": "",
        "output": "Procedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well. Procedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendant fields (fields within the scope of the calling script).",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    },
    {
        "instruction": "Explain the advantage of using procedures for programming in OpenROAD.",
        "input": "",
        "output": "Procedures provide several advantages for programming in OpenROAD. They eliminate duplication among your scripts and make code more readable. Procedures also offer a means of accessing a 3GL language from an OpenROAD script.",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    },
    {
        "instruction": "What is a procedure and how does it differ from frames and events?",
        "input": "",
        "output": "A *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable.",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    },
    {
        "instruction": "What are the benefits of using procedures?",
        "input": "",
        "output": "Procedures provide the means of accessing a 3GL language from an OpenROAD script. They also help eliminate duplication among your scripts and make code more readable.",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    },
    {
        "instruction": "Can you explain how to define a local 4GL procedure in the frame or field script?",
        "input": "",
        "output": "Local 4GL procedures are declared and defined in the frame, field, or procedure script where they are called. Here is an example of declaring and defining a simple local 4GL procedure:\n```sql\nDEFINE PROCEDURE HelloWorld() AS\n   CALL SYSTEM \"Write\" (\"Hello World\") ;\nEND-PROCEDURE ;\n```\nIn this example, the `DEFINE PROCEDURE` statement declares a new local procedure called `HelloWorld`. The `AS` keyword is used to define the code block for the procedure. The `CALL SYSTEM \"Write\"` command outputs the message \"Hello World\" to the screen. The `END-PROCEDURE` statement marks the end of the procedure definition.",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    },
    {
        "instruction": "What are the advantages of using a global procedure?",
        "input": "",
        "output": "Global procedures have several advantages: they can be called from any OpenROAD script in an application or, if included in another application, from a second application as well. This reduces code duplication and makes it easier to maintain and update the codebase. Additionally, global procedures make code more readable by breaking down complex tasks into smaller, manageable pieces.",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    },
    {
        "instruction": "Explain how to write a 4GL procedure in OpenROAD.",
        "input": "",
        "output": "The syntax for writing a 4GL procedure can be found in the *Language Reference Guide* online help. Global 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called.",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    },
    {
        "instruction": "What is the purpose of using a 3GL language from an OpenROAD script?",
        "input": "",
        "output": "Using a 3GL (third-generation programming language) allows access to powerful libraries and functions beyond what is provided by the OpenROAD's native language. This can make your scripts more efficient and capable of performing complex tasks.",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    },
    {
        "instruction": "Compare and contrast global procedures and local procedures in OpenROAD.",
        "input": "",
        "output": "Global procedures are defined globally to an application and can be called from any OpenROAD script within that application or, if included in another application, from a second application as well. In contrast, local procedures are only accessible within the frame, field, or procedure script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nWhile both types help eliminate duplication and improve code readability, global procedures have a broader scope since they can be accessed throughout an application whereas local procedures have limited accessibility to specific scripts only. Global procedures are created in the OpenROAD Workbench, while local procedures are declared and defined directly in the script where they are used.",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    },
    {
        "instruction": "Can procedures be defined in different ways in OpenROAD? If so, explain.",
        "input": "",
        "output": "Yes, procedures can be defined both globally and locally in OpenROAD. Globally-defined procedures are available for use across multiple scripts within an application or even between different applications, while locally-defined ones can only be called from the script they were defined in or its descendent fields.",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    },
    {
        "instruction": "What are the three types of procedures that OpenROAD allows users to create? Provide a brief explanation for each type.",
        "input": "",
        "output": "OpenROAD allows users to create three types of procedures: 4GL procedures, database procedures, and 3GL procedures. A Global 4GL procedure is created in the OpenROAD Workbench and can be called from any script in an application. Local 4GL procedures are declared and defined within the script they're being used in. Database procedures are created and maintained independently of OpenROAD but must be registered with specific applications, while 3GL procedures also require registration and are written outside of OpenROAD.",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    },
    {
        "instruction": "What is the purpose of using local procedures?",
        "input": "",
        "output": "Local procedures are used primarily to eliminate duplication among your scripts, making the code more readable and manageable. They can only be called from the script in which they are defined or from descendent fields (fields within the scope of the calling script). This is useful for breaking down complex tasks into smaller pieces that are easier to understand and maintain locally.",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    },
    {
        "instruction": "How does OpenROAD support accessing a 3GL language from an OpenROAD script?",
        "input": "",
        "output": "OpenROAD provides the means of accessing a 3GL language from an OpenROAD script through procedures. 3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications to allow access from within OpenROAD scripts. These procedures offer more control over complex programming tasks that require access to lower-level programming functions.",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    },
    {
        "instruction": "Where can I find the syntax for creating a 4GL procedure?",
        "input": "",
        "output": "To write a 4GL procedure, refer to the *Language Reference Guide* online help. The syntax and instructions are provided in detail there.",
        "taxonomy_path": "knowledge->programming_languages->procedures->procedures->procedures",
        "task_description": "Explain the features and types of procedures in Actian 4GL SQL",
        "document": [
            "# Procedures\n\nA *procedure* is a named piece of code that performs a single task. Unlike the event-driven code that comprises frame and field script code, procedures process in sequence. Procedures also differ from frames in that they are not associated with a form. They are used primarily to eliminate duplication among your scripts and to make code more readable. Procedures also provide the means of accessing a 3GL language from an OpenROAD script.\n\nYou can define procedures in two ways:\n\n## Globally\n\nProcedures that are defined globally to an application can be called from any OpenROAD script in that application or, if included in another application, from a second application as well.\n\n## Locally\n\nProcedures that are defined locally within a frame, field, or procedure script can be called only from the script in which they are defined or from descendent fields (fields within the scope of the calling script).\n\nOpenROAD lets you create three types of procedures:\n\n### 4GL procedures\n\nGlobal 4GL procedures are created in the OpenROAD Workbench. Local 4GL procedures are declared and defined in the frame, field, or procedure script in which they are called. For the procedure statement syntax to write a 4GL procedure, see the *Language Reference Guide* online help.\n\n### Database procedures\n\nDatabase procedures are created and maintained independently of OpenROAD, but must be registered with specific applications. They are available outside of OpenROAD applications.\n\n### 3GL procedures\n\n3GL procedures are created and maintained independently of OpenROAD, but must be registered with specific applications."
        ]
    }
]