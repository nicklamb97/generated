[
    {
        "instruction": "How can you assign the result of a function call to a variable?",
        "input": "Define a function `getFullName(fname, lname)` that returns a full name in format: 'First Last'.",
        "output": "To assign the result of a function call to a variable:\n```\nfull_name = getFullName('John', 'Doe');\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Write an example of using the assignment statement to update the value of a character variable.",
        "input": "Suppose you have declared a character variable 'first_name' and want to assign it the value \"John\".",
        "output": "To update the value of character variable 'first_name', use the following syntax:\n```\nfirst_name = 'John';\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What is the syntax for assigning an array element with a different index than the default initial sequence?",
        "input": "Suppose you have declared an array named 'sales' containing elements [10,20,30,40]. You want to assign the value 50 to the fourth element (with index 3).",
        "output": "To assign a value to an array element with a different index, use the following syntax:\n```\nsales[3] = 50;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Can you provide an example of assigning a value from a function call to a variable in Actian 4GL OpenROAD?",
        "input": "The `getTotalPrice` function takes two parameters, `base_price` and `tax_rate`. It returns the total price as `base_price * tax_rate`. We want to assign this value to the `total_price` variable.",
        "output": "To assign a value from a function call to a variable:\n```\ndeclare function getTotalPrice (base_price: currency, tax_rate: decimal): currency;\nbegin\n    total_price = getTotalPrice(item_price, sales_tax);\nend;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How would you handle a situation where a variable has been assigned an empty string in Actian 4GL OpenROAD?",
        "input": "We have a variable `user_name`. We accidentally assign it an empty string and want to check if the value is empty. If the value is empty, we should display \"Please enter your name.\"",
        "output": "To handle a situation where a variable has been assigned an empty string:\n```\nif user_name = \"\" then\n    message = \"Please enter your name.\";\nend if;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Write an example of using the `ASSIGNMENT_STATEMENT_B` to assign values based on a condition. For instance, if the salary of an employee is greater than $50000, update their bonus percentage from 10% to 20%.",
        "input": "",
        "output": "To use `ASSIGNMENT_STATEMENT_B` with a condition:\n```\nemployee[].bonus_percentage = IF (employee[].salary > 50000, 20, 10);\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How do you declare and initialize an array in Actian 4GL OpenROAD?",
        "input": "",
        "output": "To declare and initialize an array with a specific size and values:\n```sql\ndim my_array(5);\nmy_array[1] = 'a';\nmy_array[2] = 'b';\n...\nmy_array[5] = 'e';\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What is the correct syntax for setting the value of multiple variables at once?",
        "input": "Declare three variables, employee\\_id, department\\_code, and salary. Assign them respective values in one statement.",
        "output": "```\nemployee_id, department_code, salary = 123456789, 'IT', 60000;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What is the difference between the '=' and ':=' assignment operators in Actian 4GL OpenROAD?",
        "input": "The '=' operator assigns a value to a variable if the variable doesn't already have an assigned value. If a variable has been previously set, using the '=' operator will result in an error. In contrast, the ':=' operator always creates or updates the specified variable with the given value without causing an error.",
        "output": "<noinput>",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How can you assign a value to multiple variables using one single assignment?",
        "input": "Assume we have three variables, `firstName`, `lastName`, and `fullName`. All these variables are of the character data type. We want to store the user's first and last names in separate variables before concatenating them into a full name. The user has entered \"John Doe\".",
        "output": "To assign values to multiple variables using one single assignment, we can do:\n```\nfirstName = Substring(\"John Doe\", 1, 4);\nlastName = Substring(\"John Doe\", 6, 3);\nfullName = Concatenate(firstName, \" \", lastName);\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What should you do to assign the values of two variables simultaneously in OpenROAD?",
        "input": "Suppose we have two integer variables, `x` and `y`. We want to update the values of both x and y such that `x = y + 5` and `y = x - 2`. Both `x` and `y` initially are equal to 10.",
        "output": "To assign the values of two variables simultaneously, you can use multiple assignments:\n```\nx = y + 5;\ny = x - 2;\n```\nAfter this code block, both `x` and `y` will have the new updated values.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What is the correct syntax to iterate over an array in Actian OpenROAD?",
        "input": "An example of a loop that calculates the total sales for each region.",
        "output": "To iterate over an array and perform operations:\n```\ntotal_sales = 0;\nfor i = 1 to rows(regions) do\n    region_name = regions[i][0];\n    region_sales = regions[i][3];\n    total_sales = total_sales + region_sales;\nend for;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What is the syntax for creating a new instance of an object in OpenROAD?",
        "input": "Suppose we want to create a new instance of the Person class with name \"John\" and age 25.",
        "output": "To create a new instance of an object in OpenROAD, you can use the `new` keyword followed by the class name and a constructor call:\n```\nmyPerson = new Person(\"John\", 25);\n```\nThis code creates a new instance of the Person class with the provided arguments.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What is the syntax for using a function within another function in OpenROAD?",
        "input": "Suppose we have a `calculateTotal()` function that calculates the total amount from an array of numbers and a `processOrder()` function that processes the order when the total amount exceeds 50. We want to call the `calculateTotal()` function inside the `processOrder()` function.",
        "output": "To use a function within another function, you can simply call it:\n```\ndef processOrder():\n   total = calculateTotal();\n   if (total > 50):\n      // process order here\n   endif;\nenddef;\n```\nIn this example, the `calculateTotal()` function is called within the body of the `processOrder()` function. The returned value is stored in a variable `total`.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Can you provide an example of how to initialize multiple variables with values in Actian 4GL OpenROAD?",
        "input": "We have three numeric variables: `age`, `salary`, and `discount_percent`. We want to set their initial values to `28`, `35000`, and `5` respectively.",
        "output": "To initialize multiple variables with values:\n```\nage = 28;\nsalary = 35000;\ndiscount_percent = 5;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How would you assign a value from one variable to another in Actian 4GL OpenROAD?",
        "input": "We have two variables: `product_price` and `sales_tax`. We want to assign the value of `product_price` to `sales_tax`.",
        "output": "To assign a value from one variable to another:\n```\nsales_tax = product_price;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How can you assign the values of multiple variables to new ones at once?",
        "input": "Suppose we have three variables a, b, and c containing the values 10, 20, and 30 respectively. You want to create new variables x, y, and z and set their values equal to a, b, and c respectively.",
        "output": "You can assign multiple variables at once using the following syntax:\n```\nx = a;\ny = b;\nz = c;\nOR\n(x, y, z) = (a, b, c);\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What is the syntax for assigning null to an array variable?",
        "input": "Suppose you have declared an array named 'employees'. You want to clear its values and set it to NULL.",
        "output": "To set an array variable to NULL, use the following syntax:\n```\ndimension employees[0];\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Provide an example of a conditional assignment statement in Actian 4GL OpenROAD.",
        "input": "Suppose you want to assign the value \"Good\" if the value of the 'grade' variable is greater than or equal to 85, and \"Fair\" otherwise.",
        "output": "Use the following syntax for a conditional assignment statement:\n```\nif (grade >= 85) then\n    grade_description = 'Good';\nelse\n    grade_description = 'Fair';\nend if;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Describe how to declare and initialize an array in Actian 4GL OpenROAD using assignment statement.",
        "input": "Suppose you want to create an array of integers with the values 1,2,3,4 and 5 for variables 'array_element1' through 'array_element5'.",
        "output": "To initialize an array in Actian 4GL OpenROAD using assignment statement:\n```\ndeclare variable array my_array;\nbegin\n    my_array(1) = 1;\n    my_array(2) = 2;\n    my_array(3) = 3;\n    my_array(4) = 4;\n    my_array(5) = 5;\nend;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How can you assign multiple values to a single attribute of a reference variable?",
        "input": "Suppose you have a reference variable 'invoice' and its total_lines attribute can contain multiple line items. You want to set the line items for the invoice.",
        "output": "To assign multiple values to a single attribute of a reference variable:\n```\ninvoice.line_items = (line1, line2, line3);\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Can you provide an example of using the assignment statement to update the values in a database table?",
        "input": "Suppose you have a table named 'Orders' with columns 'order_id', 'customer_name', and 'total_cost'. You want to increase the total cost for order_id '101' by $50.",
        "output": "To update the values in a database table using an assignment statement:\n```\nupdate Orders set total_cost = total_cost + 50 where order_id = '101';\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What are the differences between assignment operator '=' and copy operator '@'?",
        "input": "",
        "output": "In OpenROAD, both `=` (assignment operator) and `@` (copy operator) can be used for assigning values. However, they differ in how they handle objects with internal pointers:\n- The assignment operator replaces the old value with a new one and updates the pointer to the new object.\n- The copy operator creates a new object and assigns it to the variable, preserving the original object.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Can you explain how to copy an element from one array to another?",
        "input": "Suppose you have two arrays, 'products' and 'new_products', and you want to add the third product in the 'products' array to the end of 'new_products'.",
        "output": "To copy an element (or elements) from one array to another:\n```\nnew_products[length(new_products)+1] = products[3];\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Can you demonstrate how to initialize a variable with a numeric value in Actian 4GL OpenROAD?",
        "input": "Initialize a variable called `age` and set its initial value to 18.",
        "output": "To initialize a variable with a numeric value:\n```\ndeclare age as integer;\nage = 18;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How do you assign the result of an arithmetic operation to a variable in Actian 4GL OpenROAD?",
        "input": "Calculate the area of a circle with radius 3 and store it in a variable called `area`.",
        "output": "To assign the result of an arithmetic operation:\n```\ndeclare area as real;\narea = PI * (radius ** 2);\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Can you provide an example of using a conditional statement in Actian 4GL OpenROAD?",
        "input": "Create a simple program that calculates the age group based on input age. If the person is less than 18, then print \"Minor\". If the person's age is between 18 and 65, then print \"Adult\". For ages greater than or equal to 65, print \"Senior\".",
        "output": "Using a conditional statement (IF..THEN..ELSE):\n```\ndeclare age as integer;\nread age from user;\nif (age < 18) then\n    message \"Minor\";\nelseif (age >= 18 and age <= 65) then\n    message \"Adult\";\nelse\n    message \"Senior\";\nend if;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Can you demonstrate how to perform string manipulation in Actian 4GL OpenROAD? For example, can we replace a substring within a string?",
        "input": "Write a program that replaces all instances of the word \"Hello\" with \"Greetings\".",
        "output": "Perform string replacement using the REPLACE function:\n```\ndeclare text as char;\ntext = \"Hello world Hello universe\";\nmessage replace(text, \"Hello\", \"Greetings\");\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Can you provide an example of using conditional assignment statement?",
        "input": "Suppose you have a field named 'credit_limit' for each customer. You want to set the credit limit based on whether their annual revenue exceeds $10,000. If so, set the credit limit to $5,000; otherwise, keep it at $3,000.",
        "output": "In this case, you can use a conditional assignment statement as shown below:\n```\nif (annual_revenue > 10000) then\n    credit_limit = 5000;\nelse\n    credit_limit = 3000;\nend if;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How do you assign a value from one column of a row in an array to a local variable?",
        "input": "Let's say we have an array `employees[5]`, and the name of the employee at index 2 is stored in the \"name\" column. Assign that value to a local variable called \"emp_name\".",
        "output": "To assign a value from one column of a row in an array to a local variable:\n```\nemp_name = employees[2].name;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How do you change the value of a specific cell in a 2-dimensional array based on its row and column indices?",
        "input": "Let's say we have a 2-dimensional array `grades[4][5]`. Change the grade of student 3 at school A from 'B+' to 'A'. Remember, each student has 5 subjects.",
        "output": "To change the value of a specific cell in a 2-dimensional array based on its row and column indices:\n```\ngrades[2][0] = 'A';\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How can you update the values of two variables that are dependent on each other in OpenROAD? For example, if `x = y * 2` and `y = x / 3`, how would you perform this operation?",
        "input": "Let's say we have the following initial values for the variables: `x = 15` and `y = 3`. We want to update them so that they maintain the relationship mentioned above.",
        "output": "We can use a do loop to calculate new values for both x and y:\n```\ndo until (x % 3 = 0);\n  y = x / 3;\n  x = y * 2;\nend;\n```\nAfter this loop, `x` and `y` will have the new updated values.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What happens when you assign an array variable to a scalar variable? Can you provide an example for this case?",
        "input": "Suppose there is an array `employee[3]` containing the salaries of three employees. If you want to find out the total salary paid to all employees, how would you do it using assignment statement in OpenROAD?",
        "output": "To achieve this, first, you need to initialize a scalar variable `total_salary`. Then iterate through each element in the array and add its value to the `total_salary` variable. Here is an example:\n```\ndeclare total_salary: integer;\ndeclare employee[3]: fixed(2);\nemployee[1] = 50000;\nemployee[2] = 60000;\nemployee[3] = 70000;\ntotal_salary = 0;\nfor index = 1 to length(employee) do begin\n    total_salary = total_salary + employee[index];\nend for;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What's the difference between setting a variable with the `:=` operator and the `=` operator in OpenROAD? Can you explain it with an example?",
        "input": "",
        "output": "In OpenROAD, both operators can be used for assignment statements. However, the `:` operator provides additional functionality for setting default values or performing conditional assignments. For example:\n```\ndeclare customer_name char(20);\ncustomer_name := 'John Doe';   // simple assignment\nif (credit_score > 750) then\n    customer_name = 'Premium Customer';\nelse if (credit_score > 650) then\n    customer_name := 'Standard Customer';\nelse\n    customer_name = 'High Risk Customer';\nend if;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How do you check if a variable is null in Actian 4GL OpenROAD?",
        "input": "An example of checking if a customer's phone number field is empty or not.",
        "output": "To check if a variable is null:\n```\nif (phone_number = \"\") then\n    message = \"Customer has no phone number.\";\nend if;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What is the proper syntax for declaring a local variable with a specific data type?",
        "input": "Declare a local variable called `age` to hold an integer value.",
        "output": "To declare a local variable called \"age\" to hold an integer value in OpenROAD, use:\n```\ndeclare age int;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How do you change the value of a local variable in a conditional statement?",
        "input": "Let's assume that we have a local variable called \"score\" initially set to `0`. Change the value of \"score\" to `10` if the user enters a grade higher than a 'B'.",
        "output": "To change the value of a local variable in a conditional statement:\n```\nif (grade > 'B') then\n  score = 10;\nend_if;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What is the difference between a simple assignment and an increment assignment in Actian 4GL OpenROAD?",
        "input": "",
        "output": "Simple assignments assign values to variables, whereas increment assignments increase or decrease the current value of a variable by a specified amount. For example:\n```\nvariable = 'value'; // simple assignment\nvariable += 1; // increment assignment (increase by 1)\nvariable -= 1; // increment assignment (decrease by 1)\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How do you assign the value of one expression to another variable in Actian 4GL OpenROAD?",
        "input": "Suppose you have an expression 'x * y' and want to store its result in a new variable named 'result'.",
        "output": "To assign the value of one expression to another variable, use parentheses and then assign the expression:\n```\nresult = (x * y);\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What is the syntax for declaring a variable in Actian 4GL OpenROAD Assignment Statements?",
        "input": "Create an example where we declare and initialize three variables: `counter`, `totalScore`, and `average`. Assume that you're working on a simple score system that tracks a user's total score and average score after each test. Let the counter be initialized to 1, totalScore to 0, and average to 0.",
        "output": "To declare and initialize three variables in Actian 4GL OpenROAD Assignment Statements, use:\n```\ndeclare variable counter as integer;\ndeclare variable totalScore as number(8,2);\ndeclare variable average as number(8,2);\nset counter to 1;\nset totalScore to 0.00;\nset average to 0.00;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What is the purpose of an assignment statement in programming languages? Can you provide a simple example in Actian 4GL OpenROAD?",
        "input": "Consider the case where we want to store the user's input as a variable. The user enters their age and the system needs to store this value for further processing.",
        "output": "An assignment statement is used to assign values to variables in programming languages. In Actian 4GL OpenROAD, you can use an assignment statement like:\n```\nuser_age = Input(\"Enter your age: \");\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What is the syntax for declaring a user-defined variable in Actian 4GL OpenROAD?",
        "input": "We want to create a custom variable called `number_of_employees`. What should be the syntax for this declaration?",
        "output": "To declare a user-defined variable:\n```\ndeclare integer number_of_employees;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How would you change the value of a variable in Actian 4GL OpenROAD using an assignment statement?",
        "input": "We have a variable `department_code`. We want to assign it a new value `'IT-123'`. How can we achieve this?",
        "output": "To change the value of a variable:\n```\ndepartment_code = 'IT-123';\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How can we assign multiple values to a single variable using the 'SET' statement in Actian 4GL OpenROAD?",
        "input": "Suppose we want to initialize three variables 'first', 'second', and 'third' with the values 10, 20, and 30 respectively.",
        "output": "To assign multiple values to a single variable using the 'SET' statement:\n```\nSET (first = 10, second = 20, third = 30);\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Write an assignment statement for initializing a counter variable that counts the number of valid records in a loop.",
        "input": "In this example, we are processing customer orders. A customer order record is considered valid when the total amount exceeds $1000.\n```\ncounter = 0;\nFOR EACH order IN Orders\n    IF (order.total_amount > 1000) THEN\n        counter = counter + 1;\n    END-IF;\nEND-FOR;\n```",
        "output": "Here's an assignment statement for initializing a counter variable that counts the number of valid records in a loop:\n```\ncounter = 0;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How can you set a default value for a variable if it has no initial value?",
        "input": "We have a global variable `maximum_age`. If there are no users in the system, we want to set the maximum age as `130`. How do we achieve this in Actian 4GL OpenROAD?",
        "output": "To set a default value for a variable if it has no initial value:\n```\nif (COUNT(users) = 0) then\n  maximum_age = 130;\nend_if;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What is the syntax to create a constant variable in Actian 4GL OpenROAD?",
        "input": "Create a constant variable called \"pi\" with value `3.14159265`.",
        "output": "To create a constant variable in Actian 4GL OpenROAD:\n```\nconstant pi = 3.14159265;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What is the difference between `SET` and `DECLARE` in Actian 4GL OpenROAD Assignment Statements?",
        "input": "",
        "output": "In Actian 4GL OpenROAD, `DECLARE` is used to create a variable with a specific type (integer, number, etc.), while `SET` assigns a value to an already existing variable.\n```\n-- Create a new integer variable named \"age\" and initialize it to 25 years old\ndeclare age as integer;\nset age = 25;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What is the syntax for conditionally assigning a value to a variable in Actian 4GL OpenROAD?",
        "input": "Let's say that we want to calculate a bonus payment based on an employee's performance. The employee will receive a $200 bonus if they score 80% or higher, and otherwise, they will not receive any bonus. Set the variable `bonus` accordingly.",
        "output": "To conditionally assign a value to a variable in Actian 4GL OpenROAD:\n```\ndeclare bonus as number(8,2);\nif (score >= 80) then\n    set bonus = 200;\nend-if;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What is the syntax for assigning a variable to an empty string in Actian 4GL OpenROAD?",
        "input": "variable is initially assigned 'Hello world'. Now, I want to clear its value and make it an empty string.",
        "output": "To assign an empty string (`''`) to the variable `variable`, use the following syntax:\n```\nvariable = '';\n```\nAfter this statement, the variable `variable` will no longer contain 'Hello world'.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Can you explain how to assign values to multiple attributes of a reference variable simultaneously in OpenROAD? Provide an example with the use of the `:` operator.",
        "input": "",
        "output": "To assign values to multiple attributes of a reference variable simultaneously in OpenROAD, you can use the `:` operator and separate attribute assignments by commas (`,`). Here's an example:\n```\ndeclare customer_info customer;\ncustomer_info.Name := 'John Doe';\ncustomer_info.Address := '123 Main St';\ncustomer_info.City := 'New York';\ncustomer_info.State := 'NY';\ncustomer_info.ZipCode := '10001';\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Provide an example of using a compound assignment operator in Actian 4GL OpenROAD to increment a variable by 2.",
        "input": "Suppose we have a variable named \"count\" and it currently holds the value 5.",
        "output": "Here's an example of using a compound assignment operator (+=) to increment the \"count\" variable by 2:\n```\ncount += 2;\n```\nAfter executing this line, the \"count\" variable will hold the value 7.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How do we assign a value from one expression to another variable in Actian 4GL OpenROAD?",
        "input": "Let's say we have an expression that calculates the total price of a purchase by multiplying the quantity purchased with the unit price. We want to store this value in a variable called 'total'.",
        "output": "To assign the result of an expression to a variable, you can use:\n```\ntotal = (quantity * unitPrice);\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How do we assign a value from one field to another field in Actian 4GL OpenROAD?",
        "input": "Suppose we have an order table with fields 'order_number' and 'billing_address'. We want to copy the billing address from each row of the order table into the corresponding field of the customer table.",
        "output": "To assign a value from one field to another, you can use:\n```\nFOR EACH row OF order TABLE DO:\n  customer[row.order_number].billingAddress = order.billingAddress;\nEND FOR;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How do we change the value of a variable in Actian 4GL OpenROAD?",
        "input": "Assume that we have a global variable `current_user` with an initial value set to 'John Doe'. We want to update the value of the `current_user` variable when a user logs in. What is the proper way to do this in Actian 4GL OpenROAD?",
        "output": "To change the value of a variable in Actian 4GL OpenROAD, you can re-assign a new value like so:\n```\nif (valid_login) then\n  current_user = user.username;\nend_if;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "In Actian 4GL OpenROAD, how do you create a subroutine that accepts input parameters?",
        "input": "Create a subroutine called 'AddNumbers' that takes two input parameters 'num1' and 'num2', adds them together, and returns the result.",
        "output": "To create a subroutine 'AddNumbers' with input parameters 'num1' and 'num2':\n```sql\nSubroutine AddNumbers(num1 INTEGER, num2 INTEGER);\n  Variable result INTEGER;\n  Assign result = num1 + num2;\n  Return result;\nEnd Subroutine;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Write an example of using a loop construct to iterate through elements in an array in Actian 4GL OpenROAD.",
        "input": "Let's say we have the following array \"my_array\" and we want to iterate through its values and display them.\n```sql\ndim my_array(3);\nmy_array[1] = 'a';\nmy_array[2] = 'b';\nmy_array[3] = 'c';\n```",
        "output": "To use a loop construct to iterate through elements in the \"my_array\" and display them:\n```sql\nFor i = 1 To Length(my_array);\n    Display my_array[i];\nEnd For;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What if we want to find the position of a substring within a string in Actian 4GL OpenROAD? How can we achieve that?",
        "input": "Write a program to find the position of the word \"Hello\" inside a string \"Hello world Hello universe\".",
        "output": "You can use the INSTR function to locate the position of a substring:\n```\ndeclare text as char;\ntext = \"Hello world Hello universe\";\nposition = instr(text, \"Hello\");\nmessage text & \": \" & position;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Can you show me how to assign the value of one attribute from one reference variable to another attribute in a different reference variable?",
        "input": "You have two reference variables 'invoice1' and 'invoice2'. You want to copy the total_amount attribute from invoice1 to the total_amount attribute in invoice2.",
        "output": "To assign an attribute value of one reference variable to another:\n```\ninvoice1.total_amount = 100;\ninvoice2.total_amount = invoice1.total_amount;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Write an Actian 4GL OpenROAD assignment statement that calculates and assigns the maximum of two variables (max_val and value) to a new variable called max.",
        "input": "Suppose max_val has the value 15 and value has the value 7.",
        "output": "Here's an Actian 4GL OpenROAD assignment statement that calculates and assigns the maximum of two variables (max_val and value) to a new variable called max:\n```\nIF (max_val > value) THEN\n    max = max_val;\nELSE\n    max = value;\nEND-IF;\n```\nAfter executing this code block, the \"max\" variable will hold the value 15.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Create an Actian 4GL OpenROAD assignment statement that assigns the average of two variables (value1 and value2) to a new variable called avg, where both variables are declared as decimal data types.",
        "input": "Suppose value1 has the value 3.5 and value2 has the value 7.2.",
        "output": "Here's an Actian 4GL OpenROAD assignment statement that calculates the average of two variables (value1 and value2) using the `/` operator and assigns it to a new variable called avg:\n```\navg = (value1 + value2) / 2;\n```\nAfter executing this code block, the \"avg\" variable will hold the value 5.35.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What are some common data types in Actian 4GL OpenROAD? And how do you declare them for a variable?",
        "input": "We need to declare variables `age`, `address`, and `gender`. What syntax should be used?",
        "output": "In Actian 4GL OpenROAD, the basic data types include character (`char`), integer (`int`), date (`date`), and floating-point number (`float`). To declare variables with these data types:\n```\nage          : int;\naddress      : char[100];\ngender       : char(2);\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What is the purpose of the `.` (dot) operator in Actian 4GL OpenROAD? And how do you use it when referencing a field of an object or record?",
        "input": "We have a table named `employees`. In this table, we store the name, department, and salary information for each employee. We would like to retrieve the salary of the employee with ID 12345. What is the syntax for that?",
        "output": "The dot (.) operator in Actian 4GL OpenROAD is used to access fields or attributes of an object or record. To reference a field of an object, you can use dot notation:\n```\nsalary_of_employee := employees.salary[12345];\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Write an Actian 4GL OpenROAD assignment statement that sets a variable called 'x' to the sum of two existing variables 'a' and 'b'.",
        "input": "Suppose we have already defined 'a' as 5 and 'b' as 7.",
        "output": "Here is an Actian 4GL OpenROAD assignment statement that sets the variable 'x' to the sum of 'a' and 'b':\n```\nx = a + b;\n```\nAfter executing this code block, the \"x\" variable will hold the value 12.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Create an Actian 4GL OpenROAD assignment statement that assigns the value of a loop counter called 'i' to an attribute named 'line_number' of a reference variable called 'my_data'. The loop starts at 1 and increments by 1.",
        "input": "We will assume that we are currently inside a 'FOR I = 1 BY 1 STEP 1' loop block.",
        "output": "Here is an Actian 4GL OpenROAD assignment statement that assigns the value of the loop counter to an attribute:\n```\nmy_data.line_number = i;\n```\nThis code snippet should be placed inside the 'FOR I = 1 BY 1 STEP 1' loop block. After each iteration, it will update the \"line_number\" attribute in the \"my_data\" reference variable with the current value of the loop counter 'i'.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What is the syntax for declaring a new variable in Actian 4GL OpenROAD?",
        "input": "We need to declare a new variable called `number_of_employees`. The variable should be of type integer.",
        "output": "To declare a new variable, use:\n```\ndeclare number_of_employees as integer;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How do you read an input from the user in Actian 4GL OpenROAD?",
        "input": "We would like to ask the user to enter their age, and then store the entered value in a variable called `age`.",
        "output": "To read an input from the user:\n```\nwrite \"Please enter your age.\";\nread age;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How would you initialize multiple variables with the same value in Actian 4GL OpenROAD using an assignment statement?",
        "input": "We want to declare and initialize 10 variables `var1, var2, ..., var10` all with a value of `0`. How can we do this efficiently?",
        "output": "You can use the loop structure in OpenROAD to initialize multiple variables quickly:\n```\ndeclare var1, var2, var3, ..., var10 int;\nloop i = 1 to 10 by 1;\n    var1[i] = 0;\nend loop;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How would you concatenate two strings in Actian 4GL OpenROAD using an assignment statement?",
        "input": "We have two string variables `first_name` and `last_name`. We want to create a third string variable `full_name` that contains the concatenated values of both, separated by a space.",
        "output": "You can use the concat() function in OpenROAD for string concatenation:\n```\ndeclare first_name char(50), last_name char(50), full_name char(100);\nfirst_name = 'John';\nlast_name = 'Doe';\nfull_name = concat(first_name, ' ', last_name);\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "In Actian 4GL OpenROAD, how do you assign the minimum or maximum value between two variables to a new variable?",
        "input": "Suppose variable1 has the value 5 and variable2 has the value 8. Assign the greater of both values to the new variable 'max_val'.",
        "output": "You can use the `MAX()` function in Actian 4GL OpenROAD to assign the maximum value between two variables:\n```\nmax_val = MAX(variable1, variable2);\n```\nIn this case, the \"max_val\" variable will be assigned the value 8. If you want to find the minimum value instead, use the `MIN()` function:\n```\nmin_val = MIN(variable1, variable2);\n```\nIn this case, the \"min_val\" variable will be assigned the value 5.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Write an Actian 4GL OpenROAD assignment statement that assigns a new value to an existing variable. Assume the variable is of string data type and the new value is \"Sample String\".",
        "input": "Suppose a string variable called 'my_string' has the current value \"Old Text\".",
        "output": "To change the value of the string variable 'my_string':\n```sql\nAssign my_string = \"Sample String\";\n```\nAfter executing this code block, the \"my_string\" variable will hold the new value: \"Sample String\".",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What is the purpose of using IF-ELSE statements in Actian 4GL OpenROAD programming? How do they work? Can you provide an example usage?",
        "input": "Consider a situation where we want to determine if the user's age falls within certain ranges for specific privileges. For our example, we will set three age groups: 18-20 (teen), 21-30 (adult), and above 30 (senior). We will give teens a 'limited' access level, adults will have a 'regular' access level, and seniors will receive 'premium' access.",
        "output": "To implement the decision-making using IF-ELSE statements in OpenROAD:\n```\ndeclare age as integer;\nread age from user;\nif (age >= 18) and (age <= 20) then\n    set access = 'limited';\nelseif (age >= 21) and (age <= 30) then\n    set access = 'regular';\nelse\n    set access = 'premium';\nend if;\ndisplay \"Access level: \", access;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Explain how to use conditional assignments in OpenROAD. When would they be useful? Provide an example usage scenario and code snippet.",
        "input": "A scenario where we want to assign a specific default value for a variable, but the user can override it during runtime with another value. For our example, let's assume that there is a global `defaultLanguage` variable set to \"English\". However, a user has the option to change the language preference in their account settings.",
        "output": "Implement conditional assignments using IF-ELSE construct:\n```\ndeclare user_language as char;\nread user_language from user;\nif (user_language != \"\") then\n    set defaultLanguage = user_language;\nend if;\ndisplay \"Default language: \", defaultLanguage;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How do you assign multiple values to an array in Actian 4GL OpenROAD using the `ASSIGN` statement?",
        "input": "Let's say we want to create a new 2-dimensional array called 'employees[5][3]'. The first row of the array should contain the employees' ID, last name, and first name while the second row should contain the corresponding positions. Here is a sample data:\n```\nemployee_data = [1001 'Johnson' 'Sam' ['Manager']\n                , 1002 'Smith' 'James' ['Assistant Manager']\n                ];\n```",
        "output": "You can create and assign multiple values to an array using the `ASSIGN` statement in Actian 4GL OpenROAD as follows:\n```\nASSIGN employees = employee_data;\n```\nThis code creates a new 2-dimensional array called 'employees' with the specified data.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How do you set or change a variable using the `SET` statement in Actian 4GL OpenROAD?",
        "input": "Suppose we have an existing variable called 'total_sales'. If the sales for today are 1500 dollars, how can we update the total sales with the current day's sales?",
        "output": "You can use the `SET` statement to set or change a variable in Actian 4GL OpenROAD:\n```\nSET total_sales = total_sales + 1500;\n```\nThis code adds today's sales to the existing value of the 'total_sales' variable.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Suppose you have an array containing integer values. You want to find the index of the maximum value in this array and store it in a variable. How can you accomplish that?",
        "input": "You have an array `scores` with elements [5, 90, 23, 12, 87]. How can you find the index of the highest score and store it in a variable named `highest_score_index`?",
        "output": "To find the index of the maximum value in the `scores` array and store it in the `highest_score_index` variable, use this code:\n```\ndeclare local integer highest_score_index as 0;\ndeclare local integer max_score as -1;\n\nfor i = 1 to length(scores) do begin\n    if scores[i] > max_score then begin\n        max_score = scores[i];\n        highest_score_index = i;\n    end;\nend;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Can you explain how to assign a value to multiple variables from an array using subscripting in Actian 4GL OpenROAD?",
        "input": "Suppose we have an array named `inventory`. The indices are numbered from 1 to 5. Each element contains the quantity of a specific item. We want to assign these quantities to five separate variables: `item1_quantity`, `item2_quantity`, and so on.",
        "output": "To assign a value to multiple variables from an array using subscripting in Actian 4GL OpenROAD:\n```\ndeclare variable inventory: array of integer with size 5;\ndeclare variables item1_quantity, item2_quantity, ..., item5_quantity: integer;\ninventory = (100, 200, 300, 400, 500);\nitem1_quantity = inventory[1];\nitem2_quantity = inventory[2];\n...;\nitem5_quantity = inventory[5];\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How to assign a value from one variable to another in Actian 4GL OpenROAD using the assignment statement?",
        "input": "There is an integer variable called `input_variable` with the value of 10, and I have another integer variable called `output_variable` that currently has no assigned value. Copy the value of `input_variable` into `output_variable`.",
        "output": "To copy the value of `input_variable` to `output_variable`, use the following syntax:\n```\noutput_variable = input_variable;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Explain how to swap values of two variables in Actian 4GL OpenROAD using assignment statements.",
        "input": "There are two integer variables, `var1` and `var2`, currently containing the values 5 and 3 respectively. Swap their contents without creating a temporary variable or any additional storage.",
        "output": "To swap the values of `var1` and `var2`, use the following syntax:\n```\ntemp_value = var1;\nvar1 = var2;\nvar2 = temp_value;\n```\nThis sequence of statements will swap the values stored in `var1` and `var2`.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Write an Actian 4GL OpenROAD assignment statement that calculates and assigns the average of a list of numbers. Assume you have a global variable `numbers` containing comma-separated numbers, like: \"12, 53, 78, 29, 81, 45\".",
        "input": "The example array is as follows: \"12, 53, 78, 29, 81, 45\" and the final average should be stored in a new variable called `avg`.",
        "output": "To calculate and assign the average of a list of numbers in Actian 4GL OpenROAD using a global variable containing comma-separated numbers:\n```\nDEFINE TEMP VAR temp_array AS ARRAY OF INTEGER NO-UNDO;\nDEFINE LOCAL VAR total AS INTEGER NO-UNDO;\nDEFINE LOCAL VAR count AS INTEGER NO-UNDO;\nDEFINE LOCAL VAR i AS INTEGER NO-UNDO;\nSET temp_array = SPLIT(numbers, \",\");\nFOR EACH row IN temp_array DO\n    SET total = total + row.value;\n    SET count = count + 1;\nEND-FOR;\nIF count > 0 THEN\n    SET avg = total / count;\nEND-IF;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Create an Actian 4GL OpenROAD assignment statement that sets a variable's value based on the result of a SQL query. Suppose we have a table called 'orders' with columns: order_id, product_id, and total_price. We want to find the total price of products for a specific order (order_id = 5).",
        "input": "Suppose order_id is equal to 5. The result of the query will be stored in a variable named 'total'.",
        "output": "To set a variable's value based on the result of a SQL query:\n```\nDEFINE LOCAL VAR total AS DECIMAL NO-UNDO;\nEXECUTE QUERY total = SELECT SUM(total_price) FROM orders WHERE order_id = 5;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How can you use assignment statements to create an array in Actian 4GL OpenROAD?",
        "input": "Suppose we have a new variable my_array with size 5. You want to assign values 1, 2, 3, 4, and 5 to its elements respectively.",
        "output": "To initialize an array:\n```\ndefine variable my_array as array of integer with size 5;\nmy_array[1] = 1;\nmy_array[2] = 2;\nmy_array[3] = 3;\nmy_array[4] = 4;\nmy_array[5] = 5;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What is the syntax for performing a simple assignment in Actian 4GL OpenROAD, and how can we assign a value to a variable that already exists?",
        "input": "We have an existing `discount_percent` variable. We want to update its value from `5` to `10`. What should be the statement for this change?",
        "output": "In Actian 4GL OpenROAD, to assign a new value to an existing variable, use:\n```\ndiscount_percent = 10;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What is conditional assignment in Actian 4GL OpenROAD? Can you provide an example of using the IF-THEN-ELSE construct for assignment in OpenROAD?",
        "input": "We have a `discount_percent` variable. We want to set its value based on conditions: if it is greater than or equal to `10`, we assign `20`. If it is less than or equal to `5`, we assign `0`. Otherwise, we keep the current value. What should be the statement?",
        "output": "In Actian 4GL OpenROAD, conditional assignment uses IF-THEN-ELSE constructs:\n```\nif (discount_percent >= 10) then\n    discount_percent = 20;\nelse if (discount_percent <= 5) then\n    discount_percent = 0;\nend if;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How do you initialize a variable to a specific value in Actian 4GL OpenROAD?",
        "input": "We want to create a variable called `salary` and initialize it to the value of $50,000.",
        "output": "Initialize a variable by assigning it with the desired value using an assignment statement:\n```\ndeclare salary decimal(10,2);\nsalary = 50000;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How would you calculate and assign a variable's value based on a mathematical operation in Actian 4GL OpenROAD?",
        "input": "We have two decimal variables called `base_salary` and `bonus`. We want to create a third variable called `total_compensation`, which should be the sum of these two values. Assume `base_salary` is equal to $50,000 and `bonus` is equal to $10,000.",
        "output": "To perform mathematical operations on variables and assign the result to a new variable:\n```\ndeclare base_salary decimal(10,2), bonus decimal(10,2), total_compensation decimal(10,2);\nbase_salary = 50000;\nbonus = 10000;\ntotal_compensation = base_salary + bonus;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Describe the difference between a constant and a variable in Actian 4GL OpenROAD language.",
        "input": "",
        "output": "In Actian 4GL OpenROAD, a constant is an unchangeable value during program execution, whereas a variable holds data that can be changed multiple times throughout the runtime of a program. Constants are defined using the `CONSTANT` keyword in OpenROAD while variables are declared with the `DECLARE` or `ASSIGN` statement.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Provide an example of conditional assignment (if-else) within an Actian 4GL OpenROAD assignment statement.",
        "input": "Suppose we have a numeric variable 'age' that stores the user's age, and we want to assign them a role based on their age: \"student\" if they are less than or equal to 18 years old, or \"adult\" otherwise.",
        "output": "To achieve conditional assignment in Actian 4GL OpenROAD, you can use the following code block:\n```sql\nIf (age <= 18) Then\n    Assign role = \"student\";\nElse\n    Assign role = \"adult\";\nEnd If;\n```\nThis assignment statement checks if the user's age is less than or equal to 18. Depending on the condition, it either assigns the string value \"student\" to the variable 'role' or \"adult\".",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What is the correct syntax for defining a function in Actian 4GL OpenROAD?",
        "input": "Let's create a custom function to calculate the Fibonacci sequence for a given number. Write the OpenROAD code snippet for this function.",
        "output": "To define a function called \"fib\" in Actian 4GL OpenROAD, you can use the following code:\n```\ndefine fib as procedure(n as int) returns(result as int);\n  local f1 as int;\n  local f2 as int;\n\n  if (n <= 0) then\n    result = 0;\n  elsif (n == 1) then\n    result = 1;\n  else\n    f1 = 0;\n    f2 = 1;\n    for i = 3 to n do\n      set temp as f1 + f2;\n      set f1 as f2;\n      set f2 as temp;\n      set result as f2;\n    end_for;\n  end_if;\nend_define;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How do you create a conditional statement using \"if\" in Actian 4GL OpenROAD?",
        "input": "Suppose we have a variable `temp` holding a temperature value, and we want to output different messages based on whether the temperature is above, below, or equal to 10 degrees.",
        "output": "To create a conditional statement using \"if\" in Actian 4GL OpenROAD, you can use the following code:\n```\nif (temp > 10) then\n  message 'It's hot out!';\nelsif (temp < 10) then\n  message 'It's cold outside!';\nelse\n  message 'It's a nice day!';\nend_if;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How do you update multiple variables simultaneously?",
        "input": "In our program we have two global variables `price` and `discount`. The new values of the variables are calculated using existing variables `cost_per_unit`, `percentage_of_discount` and `number_of_items`. How can we update both variables at once?",
        "output": "To update multiple variables simultaneously, group them into a single statement using a semicolon:\n```\nprice = cost_per_unit * number_of_items - (cost_per_unit * number_of_items) * percentage_of_discount;\ndiscount = percentage_of_discount * cost_per_unit * number_of_items;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What is the syntax for assigning a null value to a variable?",
        "input": "Let's assume that we have created a global variable `customer_email`. After checking if the email provided by a user is valid or not, we want to assign a null value to this variable. How should we write it in Actian 4GL OpenROAD?",
        "output": "To assign a null value to a variable:\n```\nif (IS_VALID(email) = false) then\n  customer_email = null;\nend_if;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "In Actian 4GL OpenROAD, how do you define a variable that is initially assigned a value and also allows the user to change it later on?",
        "input": "Create a variable called 'user_input' and initialize it with the string \"Welcome to my program\". The user should be able to replace this initial string with their own input.",
        "output": "To create a variable in Actian 4GL OpenROAD that is initially assigned a value but also allows changes later on:\n```\nVariable user_input As CHARACTER NO-LOCK VARYING;\nBegin;\n  Assign user_input = \"Welcome to my program\";\nEnd;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "In Actian 4GL OpenROAD, how would you write a code snippet that checks if a given number is prime?",
        "input": "Write a code snippet for function 'IsPrime' which accepts an integer input, checks whether it's prime or not, and returns `true` if the number is prime and `false` otherwise. The function should handle inputs from 2 to 32767.",
        "output": "To create a function 'IsPrime' in Actian 4GL OpenROAD:\n```sql\nFunction IsPrime(number INTEGER) Returns BOOLEAN;\n  If number <= 1 Then Return False Elseif (number Mod 2 = 0 AND number > 2) Then Return False;\n    For i = 3 To Sqrt(number) Do;\n      If (number Mod i = 0) Then Return False;\n      i = i + 2;\n    End;\n  End If;\n  Return True;\nEnd Function;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What is the proper syntax for performing arithmetic operations such as addition and subtraction in Actian 4GL OpenROAD? Provide an example calculation where we add a quantity `quantity_a` to another variable `quantity_b`.",
        "input": "Suppose both variables `quantity_a` and `quantity_b` have integers as their values. We want to calculate the total quantity by adding these two values together. What should be the OpenROAD code for this calculation?",
        "output": "For performing arithmetic operations in Actian 4GL OpenROAD, you can use expressions such as:\n```\ntotal_quantity = quantity_a + quantity_b;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How would you declare a local variable within an openROAD subroutine in Actian 4GL? What should be the syntax for this declaration?",
        "input": "Suppose we have a `calculate_total` subroutine, and we want to create a new local variable called `subtotal` that will help us accumulate data within the subroutine. What would be the syntax for declaring this variable?",
        "output": "To declare a local variable within an openROAD subroutine in Actian 4GL, use:\n```\ndeclare local subtotal as numeric(10,2);\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How can we iterate through an array in Actian 4GL OpenROAD? Provide a syntax example.",
        "input": "We have an array `my_array`. The elements of this array are integers from 1 to 5. We would like to perform an operation on each element of the array.",
        "output": "To iterate through an array in Actian 4GL OpenROAD, you can use a loop (for example, `FOR` loop). Here is an example:\n```\nfor i = 1 to size(my_array) do\n  -- Perform operation on my_array[i]\n  repeat_operation := repeat_operation + my_array[i];\nend for;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "What happens when a local variable is reassigned inside an IF statement?",
        "input": "Declare a local variable called \"x\" and assign it the value 5. Inside an IF statement, check if x is greater than 10. If true, reassign x to 25; otherwise, keep its current value.",
        "output": "When you reassign a local variable inside an IF statement, it takes the new value only within the scope of that conditional block. In this case, the value of \"x\" will remain 5 unless the condition is met (x > 10), in which case it will be reassigned to 25 for the rest of the IF block, but will revert back to 5 when exiting the IF block.\n```sql\nDECLARE x INT;\nSET x = 5;\nIF x > 10 THEN\n    SET x = 25;\nEND_IF;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "How do you assign values to multiple variables at the same time?",
        "input": "Declare two integer variables named \"a\" and \"b\". Assign them both the value of 17.",
        "output": "To assign values to multiple variables simultaneously in Actian 4GL, use the `SET` statement with a comma-separated list:\n```sql\nDECLARE a, b INT;\nSET a = 17, b = 17;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Can you explain how to assign the value of one attribute in a record to another attribute in the same record using an assignment statement?",
        "input": "Suppose you have an employee record with attributes 'employee_id' and 'salary'. If we want to update the salary attribute based on a new value given to the employee_id attribute, how can this be done efficiently?",
        "output": "To assign a value from one attribute in the same record to another attribute:\n```\nfind employee where employee_id = 100;\nif found;\n    employee.salary = 50000;\nend if;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    },
    {
        "instruction": "Can you demonstrate how to assign the value of one attribute in a substring variable to another attribute in a normal string variable using an assignment statement?",
        "input": "Imagine we have a substring variable 'sub' that holds the substring \"ABC\" from the original string `original_str = \"abc123ABCdef\"`. Now you want to assign this substring value to the `substr` attribute in the normal string variable 'str'.",
        "output": "To assign the value of a substring attribute in a substring variable to another attribute in a normal string variable:\n```\nsubstring sub(1,3) of original_str;\nstr.substr = sub;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->Language Reference Guide->3. Statements->OpenROAD Language Statements->assignment_statement_b",
        "task_description": "Write Actian 4GL OpenROAD Assignment Statements",
        "document": null
    }
]