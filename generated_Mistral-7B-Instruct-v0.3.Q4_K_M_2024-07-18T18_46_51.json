[
    {
        "instruction": "What are the prerequisites for creating a role?",
        "input": "",
        "output": "To create a role, you must have the `maintain_users` privilege and be connected to the iidbdb database. You also need the `maintain_audit` privilege to change security audit attributes.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "What are the locking and permissions required while creating a role?",
        "input": "",
        "output": "Creating a role requires having `maintain_users` privilege and being connected to the iidbdb database. For changing security audit attributes, you must have the `maintain_audit` privilege. The create role statement locks pages in the iirole catalog of the iidbdb.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "What are the three password options available for setting a password using the create role statement in Ingres?",
        "input": "",
        "output": "The three password options available for setting a password using the create role statement in Ingres are:\n1. `nopassword` which specifies that no password is associated with the role.\n2. `password = 'role_password'` which allows you to set a password for the role and remove any blanks in the password when stored. The password can be up to 24 characters long.\n3. `external_password` which allows a user\u2019s password to be passed to an external authentication server for authentication.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "What are the options for `with_option` parameter?",
        "input": "",
        "output": "The options for the `with_option` parameter include:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "What happens if an invalid role identifier is specified?",
        "input": "",
        "output": "If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "What privileges are required to execute the create role statement?",
        "input": "",
        "output": "You must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "Provide the syntax for creating a role with no password in Ingres database.",
        "input": "",
        "output": "The syntax for creating a role identifier with no password in the Ingres database is:\n```\ncreate role role_id with nopassword;\n```",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "Explain how to create a role with a password in Ingres.",
        "input": "",
        "output": "To create a role with a password in Ingres, you can use the `create role` statement and specify the desired role identifier as well as the password using the `password = 'role_password'` option. For example:\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "What is the maximum length of a password for a role in Ingres?",
        "input": "",
        "output": "In Ingres, the `role_password` can be no longer than 24 characters.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "Can you give an example of creating a role with a password using the create role statement?",
        "input": "",
        "output": "To create a role with a password, use the following command:\n```\ncreate role role_name with password = 'password';\n```\nFor example, to create a role called `admin` with password `qwerty1234`, you would use:\n```\ncreate role admin with password = 'qwerty1234';\n```",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "What is the difference between the `nopassword` and `password = 'role_password'` options in the create role statement?",
        "input": "",
        "output": "The `nopassword` option specifies that no password is associated with the specified role. The `password = 'role_password'` allows setting a password for the role. If the password contains uppercase or special characters, you should enclose it in single quotes. Any blanks are removed when the password is stored and its length cannot exceed 24 characters.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "What is the purpose of using role identifiers in Ingres?",
        "input": "",
        "output": "Role identifiers in Ingres are used to associate privileges with applications. After a role identifier is created and privileges have been granted, it can be associated with a session by using the `connect` statement. This allows multiple users or processes to connect to the server under the same set of privileges, which helps to manage access rights more easily.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "What are the conditions for creating a role identifier in Ingres?",
        "input": "",
        "output": "To create a role identifier in Ingres, you must follow these conditions:\n1. The role identifier must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers.\n2. You need to have `maintain_users` privilege and be connected to the iidbdb database to create a role identifier.\n3. The password for a role can be no longer than 24 characters.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "What are the requirements for creating a role in the Ingres database?",
        "input": "",
        "output": "To create a role, you must have the `maintain_users` privilege and be connected to the iidbdb database. You also need to have the `maintain_audit` privilege if you want to change security audit attributes.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "List down one of the password options available to set with_option parameter in the create role statement. Explain it briefly.",
        "input": "",
        "output": "One of the password options is `password = 'role_password'`. It allows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "What is the syntax of the `create role` statement in Ingres?",
        "input": "",
        "output": "The syntax of the `create role` statement is:\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "Explain the \"Create Role Locking\" section in the document.",
        "input": "",
        "output": "The Create Role Statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "What happens when you create multiple roles in a single statement?",
        "input": "",
        "output": "In the Ingres database, when you create more than one role in a single statement, all valid role identifiers are processed and created. An invalid role identifier causes an error but doesn't prevent the processing of the remaining valid role identifiers.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "What is the syntax for creating a new role in the Ingres database?",
        "input": "",
        "output": "The syntax for creating a new role in Ingres database is:\n```\ncreate role role_id {, role_id} [with with_option {, with_option}];\n```",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "What privileges does one need to create a new role in the Ingres Database?",
        "input": "",
        "output": "To create a new role in the Ingres Database, you must have `maintain_users` privilege and be connected to the iidbdb database. You must also have `maintain_audit` privilege to change security audit attributes.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "What are the minimum requirements to execute the create role statement?",
        "input": "",
        "output": "To execute the `create role` statement in the Ingres database, you must have the `maintain_users` privilege and be connected to the iidbdb database. Additionally, if you want to change security audit attributes, you need the `maintain_audit` privilege.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "What happens when you lock pages in the iirole catalog of the iidbdb during the create role operation?",
        "input": "",
        "output": "During the `create role` operation, the DBMS Server locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "How can you create a role identifier with no password in SQL for the accounting application of a bookstore?",
        "input": "",
        "output": "To create a role identifier with no password for the accounting application of a bookstore, you can execute the following statement:\n```sql\ncreate role acct_app with nopassword;\n```",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "What is the maximum length of a password in the `create role` statement?",
        "input": "",
        "output": "The maximum length of a password in the `create role` statement is 24 characters.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "What are the options available for specifying a password while creating a role in Ingres?",
        "input": "",
        "output": "When you create a role in Ingres, you can specify one of three password options: `nopassword`, `password = 'role_password'`, or `external_password`. These options allow you to not set a password, set a password for the role, or pass the user's password to an external authentication server for authentication, respectively.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "What is the purpose of creating roles in Ingres?",
        "input": "",
        "output": "Roles are used in Ingres to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, they can be used with the `connect` statement to associate those privileges with the session. Role identifiers are unique among all role, group, and user identifier names in the installation and stored in the iirole catalog of the iidbdb.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "What options are available when setting a password for a role using the `create role` statement?",
        "input": "",
        "output": "When creating a role with a password using the `create role` statement, you can specify one of the following password options:\n- `nopassword` - Specifies that no password is associated with the role.\n- `password = 'role_password'` - Allows setting a password for the role. The password must be enclosed in single quotes and can be up to 24 characters long.\n- `external_password` - Allows a user's password to be passed to an external authentication server for authentication.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "Describe the syntax of the Create Role Statement in Ingres with examples.",
        "input": "",
        "output": "The `create role` statement defines one or more role identifiers and their associated password. Its syntax is as follows:\n```sql\ncreate role role_id {, role_id} [with with_option {, with_option}];\n```\nAn example of creating a role with an associated password is:\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\nAnother example for creating a role with no password is:\n```sql\ncreate role dly_sales with nopassword;\n```",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "What happens when you run the Create Role Statement?",
        "input": "",
        "output": "When you run the `create role` statement, it locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed. After creating roles, they are stored in the iirole catalog of the iidbdb.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "What privileges are needed to create a role?",
        "input": "",
        "output": "To create a role, you must have the `maintain_users` privilege and be connected to the iidbdb database. If you want to change security audit attributes, you also need to have the `maintain_audit` privilege.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "Describe the role of the create role statement in Ingres.",
        "input": "",
        "output": "The `create role` statement in Ingres is used to define one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, they can be used with the `connect` statement to associate those privileges with a session. This statement allows you to create unique role identifiers in the iirole catalog of the iidbdb that follow the Ingres Database Administrator Guide's guidelines for role identifiers.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "What are the requirements to create a role in Ingres using the `create role` statement?",
        "input": "",
        "output": "To create a role in Ingres using the `create role` statement, you must have the `maintain_users` privilege and be connected to the iidbdb database. You also need to have the `maintain_audit` privilege if you want to change security audit attributes. The `create role` statement locks pages in the iirole catalog of the iidbdb which can cause sessions attempting to connect to the server to suspend until the statement is completed.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "Explain what happens when a user creates a role without specifying a password in Ingres.",
        "input": "",
        "output": "If you create a role without specifying a password using the `create role` statement, no password is associated with that role. This means that the role can only be used for associating privileges with applications and not for authentication purposes.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "List two password options that can be specified while creating a role in Ingres.",
        "input": "",
        "output": "Two password options that can be specified while creating a role in Ingres are:\n- `password = 'role_password'`\n- `external_password`",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "Describe the purpose of the `create role` statement in Ingres.",
        "input": "",
        "output": "The `create role` statement is used to define one or more role identifiers and their associated password in Ingres database. Role identifiers are used to associate privileges with applications, after which they can be used with the `connect` statement to associate those privileges with a session. The main purpose of this statement is to manage roles and their permissions effectively.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "Provide a brief description for the `password` option with examples when using the Ingres `create role` statement.",
        "input": "",
        "output": "The `password = 'role_password'` option in the Ingres `create role` statement allows setting a password for the specified role identifier (role_id). For example, if you want to set a password for the role_id \"bks\\_onhand\", use the following SQL command:\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\nIn case `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "Explain what the `external_password` option does in the Ingres `create role` statement and provide an example usage of this option.",
        "input": "",
        "output": "The `external_password` option in the Ingres `create role` statement allows a user's password to be passed to an external authentication server for authentication. For example, if you want to pass the password of the \"dly\\_sales\" role to an external authentication server, use the following SQL command:\n```sql\ncreate role dly_sales with external_password;\n```",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "Explain how to create a role identifier and password for a specific application in the Ingres database. Provide an example SQL statement that creates a role \"inventory\\_onhand\" with the password \"arthurdaley\".",
        "input": "",
        "output": "To create a role identifier and password for the inventory application of a bookstore, use the following SQL command:\n```sql\ncreate role inventory_onhand with password = 'arthurdaley';\n```",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "Explain how to create a role identifier without any password in the Ingres database. Provide an example SQL statement that creates a role \"daily\\_sales\" with no password.",
        "input": "",
        "output": "To create a role identifier with no password for the daily sales application of the bookstore, use the following SQL command:\n```sql\ncreate role daily_sales with nopassword;\n```",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    },
    {
        "instruction": "What happens when an invalid role identifier is specified in the `create role` statement?",
        "input": "",
        "output": "If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->create_role",
        "task_description": "Introduce the Create Role Statement and its usage in the Ingres database.",
        "document": [
            "# Create Role Statement\n\nThe `create role` statement defines one or more role identifiers and their associated password. Role identifiers are used to associate privileges with applications. After the role identifiers are created and privileges have been granted to them, use them with the `connect` statement to associate those privileges with the session. For a discussion of role identifiers, see the Ingres Database Administrator Guide.\n\n## Syntax\n\n```\ncreate role role_id {, role_id}\n          [with with_option {, with_option}];\n```\n\n## Parameters\n\n### role_id\nSpecifies the role identifier to be created. Must be a valid object name that is unique among all role, group, and user identifier names in the installation. If an invalid role identifier is specified, the DBMS Server returns an error but processes all valid role identifiers. Role identifiers are stored in the iirole catalog of the iidbdb.\n\n### with_option\nSpecifies one of the following password options:\n- `nopassword`\n- `password = 'role_password'`\n- `external_password`\n\n### nopassword\nSpecifies that no password is associated with `role_id`.\n\n### password = 'role_password'\nAllows setting a password for `role_id`. If `role_password` contains uppercase or special characters, enclose it in single quotes. Any blanks in the password are removed when the password is stored. Limits: `role_password` can be no longer than 24 characters.\n\n### external_password\nAllows a user's password to be passed to an external authentication server for authentication.\n\n## Create Role Permissions\n\nYou must have `maintain_users` privilege and be connected to the iidbdb database. You must have `maintain_audit` privilege to change security audit attributes.\n\n## Create Role Locking\n\nThe `create role` statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\n\n## Create Role Related Statements\n\n- Alter Role Statement\n- Drop Role Statement\n\n## Examples\n\n### Example 1\nCreate a role identifier and password for the inventory application of a bookstore.\n\n```sql\ncreate role bks_onhand with password = 'hgwells';\n```\n\n### Example 2\nCreate a role identifier with no password for the daily sales application of the bookstore.\n\n```sql\ncreate role dly_sales with nopassword;\n```"
        ]
    }
]